format 223
"grammars" // aima::core::nlp::data::grammars
  revision 1
  modified_by 2 "bruker"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\svnroot\\logic\\ai\\trunk\\games\\src\\main\\java\\aima/core/nlp/data/grammars/"
  java_package "aima.core.nlp.data.grammars"
  classview 221826 "grammars"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 377730 "ProbCNFGrammarExamples"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A store of example Probabilistic Chomsky-Normal-Form grammars for testing and 
demonstrating CYK.
@author Jonathon

"
      operation 1819650 "buildExampleGrammarOne"
	class_operation public return_type class_ref 377858 // ProbCNFGrammar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An elementary Chomsky-Normal-Form grammar for simple testing and 
demonstrating. This type of grammar is seen more in Computing Theory classes,
and does not mock a subset of English phrase-structure.
@return
"
      end

      operation 1819778 "buildTrivialGrammar"
	class_operation public return_type class_ref 377858 // ProbCNFGrammar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A more restrictive phrase-structure grammar, used in testing and demonstrating 
the CYK Algorithm. 
Note: It is complemented by the \"trivial lexicon\" in LexiconExamples.java
@return
"
      end
    end

    class 377986 "ProbContextFreeExamples"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 1819906 "buildWumpusGrammar"
	class_operation public return_type class_ref 378114 // ProbContextFreeGrammar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 202242 "grammars"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 323970 "ProbCNFGrammarExamples"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import aima.core.nlp.data.lexicons.LexiconExamples;
import aima.core.nlp.parsing.Lexicon;
import aima.core.nlp.parsing.grammars.ProbCNFGrammar;
import aima.core.nlp.parsing.grammars.Rule;
${definition}"
      associated_elems
	class_ref 377730 // ProbCNFGrammarExamples
      end
    end

    artifact 324098 "ProbContextFreeExamples"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import aima.core.nlp.data.lexicons.LexiconExamples;
import aima.core.nlp.parsing.Lexicon;
import aima.core.nlp.parsing.grammars.ProbContextFreeGrammar;
import aima.core.nlp.parsing.grammars.Rule;
${definition}"
      associated_elems
	class_ref 377986 // ProbContextFreeExamples
      end
    end
  end
end
