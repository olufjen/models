class CirclePanel
!!!617602.java!!!	CirclePanel()
			addMouseListener(this);
!!!617730.java!!!	paint(inout g : Graphics) : void
			super.paint(g);
			Graphics2D g2d = (Graphics2D) g;
			g2d.setColor(GuiBase.getTextColor());
			
			centerX = (int) (getWidth() / 2);
			centerY = (int) (getHeight() / 2);
			
			//paints a coordinate system and draws a circle 
			//around the zero point
			g2d.drawOval(centerX - RADIUS, centerY - RADIUS, 2 * RADIUS, 2 * RADIUS);
			g2d.drawLine(centerX - (int) (1.5 * RADIUS), centerY, centerX + (int) (1.5 * RADIUS), centerY);
			g2d.drawLine(centerX, centerY - (int) (1.5 * RADIUS), centerX, centerY + (int) (1.5 * RADIUS));
		
			//paints every angle on the circular track
			if(angles != null) {
				int i=0;
				for(; i < selectedAngleIndex; i++) {
					drawAngle(g2d, i);
				}
				i++;
				for(; i < angles.length; i++) {
					drawAngle(g2d, i);
				}
				//Selected angle has to be drawn last:
				g2d.setColor(Color.RED);
				drawAngle(g2d, selectedAngleIndex);
			}
!!!617858.java!!!	drawAngle(inout g2d : Graphics2D, in i : int) : void
			final int xCircle = (int) (centerX + RADIUS * Math.cos(Math.toRadians(angles[i])));
			final int yCircle = (int) (centerY + RADIUS * Math.sin(Math.toRadians(angles[i])));
			g2d.drawLine(getWidth() / 2, getHeight() / 2, xCircle, flipY(yCircle));
			g2d.fillOval(xCircle - 10, flipY(yCircle) - 10, 20, 20);
!!!617986.java!!!	flipY(in y : int) : int
			return getHeight() -  y;
!!!618114.java!!!	mouseClicked(inout arg0 : MouseEvent) : void
			//At a double mouse click, the index of the clicked angle is searched for. If an index is found, the angle is marked with selectedAngleIndex.
			if(arg0.getClickCount() == 2) {			
				if(angles != null) {
					int i = 0;
					for(; i < angles.length; i++) {
						int xCircle = (int) (centerX + RADIUS * Math.cos(Math.toRadians(angles[i])));
						int yCircle = (int) (centerY + RADIUS * Math.sin(Math.toRadians(angles[i])));
						yCircle = flipY(yCircle);
						if((arg0.getX() <= xCircle + 10 && arg0.getX() >= xCircle - 10) && (arg0.getY() <= yCircle + 10 && arg0.getY() >= yCircle - 10)) {
							break;
						}
					}
					if(i < angles.length) {
						selectedAngleIndex = i;
						repaint();
						jTFChangeAngle.setText(angles[selectedAngleIndex] + "\u00BA");
					}
				}   
		    }
