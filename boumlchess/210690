format 223
"fol" // no::games::chess::fol::fol
  revision 4
  modified_by 2 "bruker"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\svnroot\\logic\\ai\\trunk\\games\\src\\main\\java\\no\\games\\chess\\fol/"
  java_package "no.games.chess.fol"
  classview 202242 "fol"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 325506 "BCProof"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      class 349954 "BCProof"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment "This class is a copy of an internal class used in FOBCAsk inference procedure
@author olj

"
	classrelation 427394 // <realization>
	  relation 427394 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 427394 // <realization>
	    b parent class_ref 163202 // Proof
	end

	classrelation 427522 // proofSteps (<unidirectional association>)
	  relation 427522 --->
	    stereotype "List"
	    a role_name "proofSteps" init_value " new ArrayList<>()" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 427522 // proofSteps (<unidirectional association>)
	    b parent class_ref 163330 // ProofStep
	end

	classrelation 427650 // answerBindings (<unidirectional association>)
	  relation 427650 --->
	    stereotype "Map"
	    a role_name "answerBindings" init_value " new HashMap<>()" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Term> ${name}${value};
"
	      classrelation_ref 427650 // answerBindings (<unidirectional association>)
	    b parent class_ref 157698 // Variable
	end

	operation 1748226 "BCProof"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1748354 "addProofStep"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "step" type class_ref 163330 // ProofStep
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1748482 "getSteps"
	  public return_type class_ref 163330 // ProofStep
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1748610 "getAnswerBindings"
	  public return_type class_ref 157698 // Variable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, Term> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1748738 "replaceAnswerBindings"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "updatedBindings" explicit_type "Map<Variable, Term>"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 390146 // <realization>
	relation 390146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 390146 // <realization>
	  b parent class_ref 163202 // Proof
      end

      classrelation 390274 // proofSteps (<unidirectional association>)
	relation 390274 --->
	  stereotype "List"
	  a role_name "proofSteps" init_value " new ArrayList<>()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 390274 // proofSteps (<unidirectional association>)
	  b parent class_ref 163330 // ProofStep
      end

      classrelation 390402 // answerBindings (<unidirectional association>)
	relation 390402 --->
	  stereotype "Map"
	  a role_name "answerBindings" init_value " new HashMap<>()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Term> ${name}${value};
"
	    classrelation_ref 390402 // answerBindings (<unidirectional association>)
	  b parent class_ref 157698 // Variable
      end

      operation 1641986 "BCProof"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1642114 "addProofStep"
	public explicit_return_type "void"
	nparams 1
	  param inout name "step" type class_ref 163330 // ProofStep
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1642242 "getSteps"
	public return_type class_ref 163330 // ProofStep
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1642370 "getAnswerBindings"
	public return_type class_ref 157698 // Variable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, Term> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1642498 "replaceAnswerBindings"
	public explicit_return_type "void"
	nparams 1
	  param inout name "updatedBindings" explicit_type "Map<Variable, Term>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 349826 "BCGamesAskHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 427010 // <realization>
	relation 427010 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 427010 // <realization>
	  b parent class_ref 162818 // InferenceResult
      end

      classrelation 427138 // stepFinal (<unidirectional association>)
	relation 427138 --->
	  a role_name "stepFinal" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 427138 // stepFinal (<unidirectional association>)
	  b parent class_ref 163330 // ProofStep
      end

      classrelation 427266 // proofs (<unidirectional association>)
	relation 427266 --->
	  stereotype "List"
	  a role_name "proofs" init_value " new ArrayList<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 427266 // proofs (<unidirectional association>)
	  b parent class_ref 163202 // Proof
      end

      attribute 442626 "finalList"
	private explicit_type "HashMap<Variable,Term>"
	stereotype "List"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 1746818 "BCGamesAskHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1746946 "getFinalList"
	public explicit_return_type "List<HashMap<Variable, Term>>"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1747074 "setFinalList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "finalList" explicit_type "List<HashMap<Variable, Term>>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1747202 "isPossiblyFalse"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1747330 "isTrue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1747458 "isUnknownDueToTimeout"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1747586 "isPartialResultDueToTimeout"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1747714 "getProofs"
	public return_type class_ref 163202 // Proof
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1747842 "addProofStep"
	public explicit_return_type "void"
	nparams 1
	  param inout name "step" type class_ref 163330 // ProofStep
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1747970 "clearLists"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "clearLists
This method clear all lists for the next query
@author olj
"
      end

      operation 1748098 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 325378 "BCGamesAskHandler"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end
    end

    class 350082 "BCProofStep"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 427778 // <generalisation>
	relation 427778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 427778 // <generalisation>
	  b parent class_ref 163714 // AbstractProofStep
      end

      classrelation 427906 // predecessors (<unidirectional association>)
	relation 427906 --->
	  stereotype "List"
	  a role_name "predecessors" init_value " new ArrayList<>()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 427906 // predecessors (<unidirectional association>)
	  b parent class_ref 163330 // ProofStep
      end

      classrelation 428034 // implication (<unidirectional association>)
	relation 428034 --->
	  a role_name "implication" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 428034 // implication (<unidirectional association>)
	  b parent class_ref 148610 // Clause
      end

      classrelation 428162 // goal (<unidirectional association>)
	relation 428162 --->
	  a role_name "goal" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 428162 // goal (<unidirectional association>)
	  b parent class_ref 148738 // Literal
      end

      operation 1748866 "BCProofStep"
	public explicit_return_type ""
	nparams 3
	  param inout name "implication" type class_ref 148610 // Clause
	  param inout name "predecessors" explicit_type "List<ProofStep>"
	  param inout name "goal" type class_ref 148738 // Literal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1748994 "getPredecessorSteps"
	public return_type class_ref 163330 // ProofStep
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1749122 "getProof"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1749250 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1749378 "getJustification"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 350210 "FCGamesAskAnswerHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 428290 // <realization>
	relation 428290 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 428290 // <realization>
	  b parent class_ref 162818 // InferenceResult
      end

      classrelation 428418 // stepFinal (<unidirectional association>)
	relation 428418 --->
	  a role_name "stepFinal" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 428418 // stepFinal (<unidirectional association>)
	  b parent class_ref 163330 // ProofStep
      end

      classrelation 428546 // proofs (<unidirectional association>)
	relation 428546 --->
	  stereotype "List"
	  a role_name "proofs" init_value " new ArrayList<Proof>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 428546 // proofs (<unidirectional association>)
	  b parent class_ref 163202 // Proof
      end

      operation 1749506 "FCGamesAskAnswerHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1749634 "getStepFinal"
	public return_type class_ref 163330 // ProofStep
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1749762 "setStepFinal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stepFinal" type class_ref 163330 // ProofStep
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1749890 "setProofs"
	public explicit_return_type "void"
	nparams 1
	  param inout name "proofs" explicit_type "List<Proof>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1750018 "isPossiblyFalse"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " START-InferenceResult"
      end

      operation 1750146 "isTrue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1750274 "isUnknownDueToTimeout"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1750402 "isPartialResultDueToTimeout"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1750530 "getProofs"
	public return_type class_ref 163202 // Proof
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1750658 "clearProofs"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " END-InferenceResult
"
      end

      operation 1750786 "addProofStep"
	public explicit_return_type "void"
	nparams 3
	  param inout name "implication" type class_ref 148610 // Clause
	  param inout name "fact" type class_ref 148738 // Literal
	  param inout name "bindings" explicit_type "Map<Variable, Term>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1750914 "addProofStep"
	public explicit_return_type "void"
	nparams 1
	  param inout name "step" type class_ref 163330 // ProofStep
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1751042 "setAnswers"
	public explicit_return_type "void"
	nparams 1
	  param inout name "answers" explicit_type "Set<Map<Variable, Term>>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 350338 "FOLGamesBCAsk"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@since 30.11.20
This is my own implementation of The forward chaining inference procedure OLJ 30.11.20
Artificial Intelligence A Modern Approach (3rd Edition): Figure 9.6, page
338.<br>
<br>

<pre>
function FOL-BC-ASK(KB, query) returns a generator of substitutions
 *   return FOL-BC-OR(KB, query, { })

generator FOL-BC-OR(KB, goal, θ) yields a substitution
 *   for each rule (lhs ⇒ rhs) in FETCH-RULES-FOR-GOAL(KB, goal) do
 *        (lhs, rhs) ← STANDARDIZE-VARIABLES((lhs, rhs))
 *  	  for each θ' in FOL-BC-AND(KB, lhs, UNIFY(rhs, goal, θ)) do
 *    	       yield θ'

generator FOL-BC-AND(KB, goals, θ) yields a substitution
 *   if θ = failure then return
 *   else if LENGTH(goals) = 0 then yield θ
 *   else do
 *        first, rest ← FIRST(goals), REST(goals)
 *        for each θ' in FOL-BC-OR(KB, SUBST(θ, first), θ) do
 *             for each θ'' in FOL-BC-AND(KB, rest, θ') do
 *                  yield θ'
</pre>

Figure 9.6 A simple backward-chaining algorithm for first-order knowledge bases.

@author samagra
@author Ritwik Sharma
@author Ciaran O'Reilly
@author Mike Stampone
"
      classrelation 428674 // <realization>
	relation 428674 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 428674 // <realization>
	  b parent class_ref 162690 // InferenceProcedure
      end

      attribute 442754 "finalAnswer"
	package explicit_type "List<Literal>"
	stereotype "List"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " to store the final result"
      end

      classrelation 428802 // substitutedLiterals (<unidirectional association>)
	relation 428802 --->
	  stereotype "List"
	  a role_name "substitutedLiterals" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 428802 // substitutedLiterals (<unidirectional association>)
	  b parent class_ref 148738 // Literal
      end

      attribute 442882 "finalList"
	package explicit_type "HashMap<Variable,Term>"
	stereotype "List"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 428930 // bcaskHandler (<unidirectional association>)
	relation 428930 --->
	  a role_name "bcaskHandler" init_value " new BCGamesAskHandler()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 428930 // bcaskHandler (<unidirectional association>)
	  b parent class_ref 349826 // BCGamesAskHandler
      end

      attribute 443010 "maybeFalse"
	public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 1751170 "FOLGamesBCAsk"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1751298 "getSubstitutedLiterals"
	public return_type class_ref 148738 // Literal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1751426 "folBcAsk"
	public explicit_return_type "List<HashMap<Variable,Term>>"
	nparams 2
	  param inout name "kb" type class_ref 162946 // FOLKnowledgeBase
	  param inout name "query" type class_ref 148738 // Literal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " START-InferenceProcedure

Returns a set of substitutions
function FOL-BC-ASK(KB, query) returns a generator of substitutions
@param kb
           a knowledge base
@param query
           goals, a list of conjuncts forming a query

@return a set of substitutions
"
      end

      operation 1751554 "folBcOr"
	private explicit_return_type "List<HashMap<Variable, Term>>"
	nparams 3
	  param inout name "kb" type class_ref 162946 // FOLKnowledgeBase
	  param inout name "goal" type class_ref 148738 // Literal
	  param inout name "theta" explicit_type "HashMap<Variable, Term>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "generator FOL-BC-OR(KB, goal, θ) yields a substitution
@param kb
			The knowleadge base
@param goal
			The goals at the or node to be achieved
@param theta
			Substitution
@return
		a list of substitutions
"
      end

      operation 1751682 "folBcAnd"
	private explicit_return_type "List<HashMap<Variable, Term>>"
	nparams 3
	  param inout name "kb" type class_ref 162946 // FOLKnowledgeBase
	  param inout name "goals" explicit_type "List<Literal>"
	  param inout name "theta" explicit_type "Map<Variable, Term>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "generator FOL-BC-AND(KB, goals, θ) yields a substitution
@param kb
@param goals
@param theta
@return
"
      end

      operation 1751810 "fetchRulesForGoal"
	private return_type class_ref 148610 // Clause
	nparams 2
	  param inout name "kb" type class_ref 162946 // FOLKnowledgeBase
	  param inout name "goal" type class_ref 148738 // Literal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches all those implication clauses whose rhs meet with the goal
@param kb
@param goal
@return
"
      end

      operation 1751938 "getFinalAnswer"
	public explicit_return_type "List<List<Literal>>"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1752066 "clearLists"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "clearLists
This method clear all lists for the next query
@author olj
"
      end

      operation 1752194 "ask"
	public return_type class_ref 162818 // InferenceResult
	nparams 2
	  param inout name "kb" type class_ref 162946 // FOLKnowledgeBase
	  param inout name "query" type class_ref 149634 // Sentence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 350466 "FOLGamesFCAsk"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@since 30.11.20
This is my own implementation of The forward chaining inference procedure OLJ 30.11.20

Artificial Intelligence A Modern Approach (3rd Edition): Figure 9.3, page
332.<br>
<br>

<pre>
function FOL-FC-ASK(KB, alpha) returns a substitution or false
  inputs: KB, the knowledge base, a set of first order definite clauses
          alpha, the query, an atomic sentence
  local variables: new, the new sentences inferred on each iteration
  
  repeat until new is empty
     new &lt;- {}
     for each rule in KB do
         (p1 &circ; ... &circ; pn =&gt; q) &lt;- STANDARDIZE-VARAIBLES(rule)
         for each theta such that SUBST(theta, p1 &circ; ... &circ; pn) = SUBST(theta, p'1 &circ; ... &circ; p'n)
                        for some p'1,...,p'n in KB
             q' &lt;- SUBST(theta, q)
             if q' does not unify with some sentence already in KB or new then
                  add q' to new
                  theta &lt;- UNIFY(q', alpha)
                  if theta is not fail then return theta
     add new to KB
  return false
</pre>

Figure 9.3 A conceptually straightforward, but very inefficient
forward-chaining algo- rithm. On each iteration, it adds to KB all the atomic
sentences that can be inferred in one step from the implication sentences and
the atomic sentences already in KB. The function STANDARDIZE-VARIABLES
replaces all variables in its arguments with new ones that have not been used
before.

@author Ciaran O'Reilly

"
      classrelation 429058 // <realization>
	relation 429058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 429058 // <realization>
	  b parent class_ref 162690 // InferenceProcedure
      end

      operation 1752322 "FOLGamesFCAsk"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1752450 "ask"
	public return_type class_ref 162818 // InferenceResult
	nparams 2
	  param inout name "KB" type class_ref 162946 // FOLKnowledgeBase
	  param inout name "query" type class_ref 149634 // Sentence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " START-InferenceProcedure

FOL-FC-ASK returns a substitution or false.

@param KB
           the knowledge base, a set of first order definite clauses
@param query
           the query, an atomic sentence

@return a substitution or false
"
      end

      operation 1752578 "invert"
	private return_type class_ref 148738 // Literal
	nparams 1
	  param inout name "lits" explicit_type "List<Literal>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " END-InferenceProcedure


 PRIVATE METHODS
"
      end
    end
  end

  deploymentview 182658 "fol"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 292610 "BCGamesAskHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Set;
import aima.core.logic.fol.inference.InferenceResult;
import aima.core.logic.fol.inference.proof.Proof;
import aima.core.logic.fol.inference.proof.ProofStep;
import aima.core.logic.fol.parsing.ast.Term;
import aima.core.logic.fol.parsing.ast.Variable;
import no.games.chess.fol.BCProof;
${definition}"
      associated_elems
	class_ref 349826 // BCGamesAskHandler
      end
    end

    artifact 292738 "BCProof"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import aima.core.logic.fol.inference.proof.Proof;
import aima.core.logic.fol.inference.proof.ProofStep;
import aima.core.logic.fol.parsing.ast.Term;
import aima.core.logic.fol.parsing.ast.Variable;
${definition}"
      associated_elems
      end
    end

    artifact 292866 "BCProofStep"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.List;
import aima.core.logic.fol.inference.proof.AbstractProofStep;
import aima.core.logic.fol.inference.proof.ProofStep;
import aima.core.logic.fol.kb.data.Clause;
import aima.core.logic.fol.kb.data.Literal;
${definition}"
      associated_elems
	class_ref 350082 // BCProofStep
      end
    end

    artifact 292994 "FCGamesAskAnswerHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import aima.core.logic.fol.inference.InferenceResult;
import aima.core.logic.fol.inference.proof.Proof;
import aima.core.logic.fol.inference.proof.ProofFinal;
import aima.core.logic.fol.inference.proof.ProofStep;
import aima.core.logic.fol.inference.proof.ProofStepFoChAssertFact;
import aima.core.logic.fol.kb.data.Clause;
import aima.core.logic.fol.kb.data.Literal;
import aima.core.logic.fol.parsing.ast.Term;
import aima.core.logic.fol.parsing.ast.Variable;
${definition}"
      associated_elems
	class_ref 350210 // FCGamesAskAnswerHandler
      end
    end

    artifact 293122 "FOLGamesBCAsk"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import aima.core.logic.fol.Unifier;
import aima.core.logic.fol.inference.InferenceProcedure;
import aima.core.logic.fol.inference.InferenceResult;
import aima.core.logic.fol.inference.proof.Proof;
import aima.core.logic.fol.inference.proof.ProofStep;
import aima.core.logic.fol.kb.FOLKnowledgeBase;
import aima.core.logic.fol.kb.data.Clause;
import aima.core.logic.fol.kb.data.Literal;
import aima.core.logic.fol.parsing.ast.AtomicSentence;
import aima.core.logic.fol.parsing.ast.Sentence;
import aima.core.logic.fol.parsing.ast.Term;
import aima.core.logic.fol.parsing.ast.Variable;
import aima.core.logic.propositional.kb.KnowledgeBase;
${definition}"
      associated_elems
	class_ref 350338 // FOLGamesBCAsk
      end
    end

    artifact 293250 "FOLGamesFCAsk"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import aima.core.logic.fol.inference.InferenceProcedure;
import aima.core.logic.fol.inference.InferenceResult;
import aima.core.logic.fol.inference.proof.Proof;
import aima.core.logic.fol.inference.proof.ProofFinal;
import aima.core.logic.fol.inference.proof.ProofStep;
import aima.core.logic.fol.inference.proof.ProofStepFoChAlreadyAFact;
import aima.core.logic.fol.inference.proof.ProofStepFoChAssertFact;
import aima.core.logic.fol.kb.FOLKnowledgeBase;
import aima.core.logic.fol.kb.data.Clause;
import aima.core.logic.fol.kb.data.Literal;
import aima.core.logic.fol.parsing.ast.AtomicSentence;
import aima.core.logic.fol.parsing.ast.NotSentence;
import aima.core.logic.fol.parsing.ast.Sentence;
import aima.core.logic.fol.parsing.ast.Term;
import aima.core.logic.fol.parsing.ast.Variable;
${definition}"
      associated_elems
	class_ref 350466 // FOLGamesFCAsk
      end
    end
  end

  package_ref 217218 // util
end
