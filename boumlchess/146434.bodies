class DataSetSpecification
!!!210946.java!!!	DataSetSpecification()
		this.attributeSpecifications = new ArrayList<AttributeSpecification>();
!!!211074.java!!!	isValid(inout uncheckedAttributes : List<String>) : boolean
		if (attributeSpecifications.size() != uncheckedAttributes.size()) {
			throw new RuntimeException("size mismatch specsize = "
					+ attributeSpecifications.size() + " attrbutes size = "
					+ uncheckedAttributes.size());
		}
		Iterator<AttributeSpecification> attributeSpecIter = attributeSpecifications
				.iterator();
		Iterator<String> valueIter = uncheckedAttributes.iterator();
		while (valueIter.hasNext() && attributeSpecIter.hasNext()) {
			if (!(attributeSpecIter.next().isValid(valueIter.next()))) {
				return false;
			}
		}
		return true;
!!!211202.java!!!	getTarget() : String
		return targetAttribute;
!!!211330.java!!!	getPossibleAttributeValues(in attributeName : String) : List<String>
		for (AttributeSpecification as : attributeSpecifications) {
			if (as.getAttributeName().equals(attributeName)) {
				return ((StringAttributeSpecification) as)
						.possibleAttributeValues();
			}
		}
		throw new RuntimeException("No such attribute" + attributeName);
!!!211458.java!!!	getAttributeNames() : List<String>
		List<String> names = new ArrayList<String>();
		for (AttributeSpecification as : attributeSpecifications) {
			names.add(as.getAttributeName());
		}
		return names;
!!!211586.java!!!	defineStringAttribute(in name : String, inout attributeValues : String [[]]) : void
		attributeSpecifications.add(new StringAttributeSpecification(name,
				attributeValues));
		setTarget(name);// target defaults to last column added
!!!211714.java!!!	setTarget(in target : String) : void
		this.targetAttribute = target;
!!!211842.java!!!	getAttributeSpecFor(in name : String) : AttributeSpecification
		for (AttributeSpecification spec : attributeSpecifications) {
			if (spec.getAttributeName().equals(name)) {
				return spec;
			}
		}
		throw new RuntimeException("no attribute spec for  " + name);
!!!211970.java!!!	defineNumericAttribute(in name : String) : void
		attributeSpecifications.add(new NumericAttributeSpecification(name));
!!!212098.java!!!	getNamesOfStringAttributes() : List<String>
		List<String> names = new ArrayList<String>();
		for (AttributeSpecification spec : attributeSpecifications) {
			if (spec instanceof StringAttributeSpecification) {
				names.add(spec.getAttributeName());
			}
		}
		return names;
