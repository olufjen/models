class ProofStepClauseBinaryResolvent
!!!309250.java!!!	ProofStepClauseBinaryResolvent(inout resolvent : Clause, inout pl : Literal, inout nl : Literal, inout parent1 : Clause, inout parent2 : Clause, inout subst : Map<Variable, Term>, inout renameSubst : Map<Variable, Term>)
		this.resolvent = resolvent;
		this.posLiteral = pl;
		this.negLiteral = nl;
		this.parent1 = parent1;
		this.parent2 = parent2;
		this.subst.putAll(subst);
		this.renameSubst.putAll(renameSubst);
		this.predecessors.add(parent1.getProofStep());
		this.predecessors.add(parent2.getProofStep());
!!!309378.java!!!	getPredecessorSteps() : ProofStep
		return Collections.unmodifiableList(predecessors);
!!!309506.java!!!	getProof() : String
		return resolvent.toString();
!!!309634.java!!!	getJustification() : String
		int lowStep = parent1.getProofStep().getStepNumber();
		int highStep = parent2.getProofStep().getStepNumber();

		if (lowStep > highStep) {
			lowStep = highStep;
			highStep = parent1.getProofStep().getStepNumber();
		}

		return "Resolution: " + lowStep + ", " + highStep + "  [" + posLiteral
				+ ", " + negLiteral + "], subst=" + subst + ", renaming="
				+ renameSubst;
