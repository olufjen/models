class DefaultMove
!!!1508610.java!!!	DefaultMove(inout inference : CodeGenerationInference, inout iri : IRI)
        super(inference, iri);
!!!1508738.java!!!	getMakeMove() : Collection<? extends WrappedIndividual>
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_MAKEMOVE,
                                               WrappedIndividualImpl.class);
!!!1508866.java!!!	hasMakeMove() : boolean
	   return !getMakeMove().isEmpty();
!!!1508994.java!!!	addMakeMove(inout newMakeMove : WrappedIndividual) : void
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_MAKEMOVE,
                                       newMakeMove);
!!!1509122.java!!!	removeMakeMove(inout oldMakeMove : WrappedIndividual) : void
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_MAKEMOVE,
                                          oldMakeMove);
!!!1509250.java!!!	getMoveFrom() : Collection<? extends ChessPosition>
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_MOVEFROM,
                                               DefaultChessPosition.class);
!!!1509378.java!!!	hasMoveFrom() : boolean
	   return !getMoveFrom().isEmpty();
!!!1509506.java!!!	addMoveFrom(inout newMoveFrom : ChessPosition) : void
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_MOVEFROM,
                                       newMoveFrom);
!!!1509634.java!!!	removeMoveFrom(inout oldMoveFrom : ChessPosition) : void
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_MOVEFROM,
                                          oldMoveFrom);
!!!1509762.java!!!	getMoveTo() : Collection<? extends ChessPosition>
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_MOVETO,
                                               DefaultChessPosition.class);
!!!1509890.java!!!	hasMoveTo() : boolean
	   return !getMoveTo().isEmpty();
!!!1510018.java!!!	addMoveTo(inout newMoveTo : ChessPosition) : void
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_MOVETO,
                                       newMoveTo);
!!!1510146.java!!!	removeMoveTo(inout oldMoveTo : ChessPosition) : void
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_MOVETO,
                                          oldMoveTo);
!!!1510274.java!!!	getMovementOf() : Collection<? extends ChessPiece>
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_MOVEMENTOF,
                                               DefaultChessPiece.class);
!!!1510402.java!!!	hasMovementOf() : boolean
	   return !getMovementOf().isEmpty();
!!!1510530.java!!!	addMovementOf(inout newMovementOf : ChessPiece) : void
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_MOVEMENTOF,
                                       newMovementOf);
!!!1510658.java!!!	removeMovementOf(inout oldMovementOf : ChessPiece) : void
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_MOVEMENTOF,
                                          oldMovementOf);
!!!1510786.java!!!	getIsPartOf() : Collection<? extends WrappedIndividual>
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ISPARTOF,
                                               WrappedIndividualImpl.class);
!!!1510914.java!!!	hasIsPartOf() : boolean
	   return !getIsPartOf().isEmpty();
!!!1511042.java!!!	addIsPartOf(inout newIsPartOf : WrappedIndividual) : void
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ISPARTOF,
                                       newIsPartOf);
!!!1511170.java!!!	removeIsPartOf(inout oldIsPartOf : WrappedIndividual) : void
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ISPARTOF,
                                          oldIsPartOf);
!!!1511298.java!!!	getOpponents() : Collection<? extends WrappedIndividual>
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_OPPONENTS,
                                               WrappedIndividualImpl.class);
!!!1511426.java!!!	hasOpponents() : boolean
	   return !getOpponents().isEmpty();
!!!1511554.java!!!	addOpponents(inout newOpponents : WrappedIndividual) : void
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_OPPONENTS,
                                       newOpponents);
!!!1511682.java!!!	removeOpponents(inout oldOpponents : WrappedIndividual) : void
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_OPPONENTS,
                                          oldOpponents);
!!!1511810.java!!!	getPlays() : Collection<? extends WrappedIndividual>
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_PLAYS,
                                               WrappedIndividualImpl.class);
!!!1511938.java!!!	hasPlays() : boolean
	   return !getPlays().isEmpty();
!!!1512066.java!!!	addPlays(inout newPlays : WrappedIndividual) : void
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_PLAYS,
                                       newPlays);
!!!1512194.java!!!	removePlays(inout oldPlays : WrappedIndividual) : void
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_PLAYS,
                                          oldPlays);
!!!1512322.java!!!	getHasName() : Collection<? extends Object>
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, Object.class);
!!!1512450.java!!!	hasHasName() : boolean
		return !getHasName().isEmpty();
!!!1512578.java!!!	addHasName(inout newHasName : Object) : void
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, newHasName);
!!!1512706.java!!!	removeHasName(inout oldHasName : Object) : void
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, oldHasName);
!!!1512834.java!!!	getHasValue() : Collection<? extends Integer>
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASVALUE, Integer.class);
!!!1512962.java!!!	hasHasValue() : boolean
		return !getHasValue().isEmpty();
!!!1513090.java!!!	addHasValue(inout newHasValue : Integer) : void
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASVALUE, newHasValue);
!!!1513218.java!!!	removeHasValue(inout oldHasValue : Integer) : void
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASVALUE, oldHasValue);
