format 223
"shapes" // aima::core::util::math::geom::shapes
  revision 2
  modified_by 2 "bruker"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\svnroot\\logic\\ai\\trunk\\games\\src\\main\\java\\aima/core/util/math/geom/shapes/"
  java_package "aima.core.util.math.geom.shapes"
  classview 129794 "shapes"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 137218 "Point2D"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simplified version of <code>java.awt.geom.Point2D</code>. We do not want
dependencies to presentation layer packages here.

@author R. Lunde
@author Mike Stampone
"
      classrelation 245890 // <realization>
	relation 245890 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 245890 // <realization>
	  b parent class_ref 134274 // Cloneable
      end

      attribute 211842 "x"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 211970 "y"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 532610 "Point2D"
	public explicit_return_type ""
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param x the X coordinate of the point.
@param y the Y coordinate of the point.
"
      end

      operation 532738 "getX"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the X coordinate of this <code>Point2D</code> in
<code>double</code> precision.

@return the X coordinate of this <code>Point2D</code>.
"
      end

      operation 532866 "getY"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Y coordinate of this <code>Point2D</code> in
<code>double</code> precision.

@return the Y coordinate of this <code>Point2D</code>.
"
      end

      operation 532994 "distance"
	public explicit_return_type "double"
	nparams 1
	  param inout name "pt" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Euclidean distance between a specified point and this point.
@param pt the second point.
@return the Euclidean distance between a specified point and this point.
"
      end

      operation 533122 "add"
	public return_type class_ref 137218 // Point2D
	nparams 1
	  param inout name "op2" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a vector onto a point.<br/>
This moves the point by {@code vector.getX()} in X direction and {@code vector.getY()} in Y direction.
@param op2 the {@link Vector2D} to be added.
@return the moved point.
"
      end

      operation 533250 "sub"
	public return_type class_ref 137218 // Point2D
	nparams 1
	  param inout name "op2" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subtracts a vector from a point.<br/>
This moves the point by {@code vector.getX()} in negative X direction and {@code vector.getY()} in negative Y direction.
@param op2 the {@link Vector2D} to be subtracted.
@return the moved point.
"
      end

      operation 533378 "vec"
	public return_type class_ref 203138 // Vector2D
	nparams 1
	  param inout name "target" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the vector between this point and the target point.
@param target the point that describes the end of the vector.
@return the vector between this point and the target point.
"
      end

      operation 533506 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "op2" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks a point for equality with this point.
@param op2 the second point.
@return {@code true} if the points have the same coordinates.
"
      end

      operation 533634 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 533762 "clone"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 189698 "IGeometric2D"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface defines functionality that geometric shapes in a two-dimensional Cartesian plot have to implement.<br/>
If pre-calculations can speed up the functions {@code isInside},{@code isInsideBorder} and {@code rayCast} these calculations should be made.<br/>
The reason being that these functions will be called more frequently than the constructor of the shapes.

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      operation 527490 "randomPoint"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a random point that is on this geometric shape. {@code isInsideBorder()} has to return {@code true} for that point.
@return a new random point inside the shape.
"
      end

      operation 527618 "isInside"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the point is inside this geometric shape excluding its border.
@param point the point to be tested.
@return true if the point is inside the shape.
"
      end

      operation 527746 "isInsideBorder"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the point is inside this geometric shape including its border.
@param point the point to be tested.
@return true if the point is inside the shape or on its border.
"
      end

      operation 527874 "rayCast"
	public explicit_return_type "double"
	nparams 1
	  param inout name "ray" type class_ref 202498 // Ray2D
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Intersects this geometric shape with a ray.
@param ray the ray to intersect.
@return the length of the ray until it intersects with this shape. {@code Double.POSITIVE_INFINITY} if it does not intersect this shape.
"
      end

      operation 528002 "getBounds"
	public return_type class_ref 189826 // Rect2D
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the boundaries of this geometric shape as a {@link Rect2D}.
@return the boundaries of this shape.
"
      end

      operation 528130 "transform"
	public return_type class_ref 189698 // IGeometric2D
	nparams 1
	  param inout name "matrix" type class_ref 202754 // TransformMatrix2D
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates a {@link TransformMatrix2D} onto this geometric shape.
@param matrix the transformation matrix that gets calculated into this shape.
@return the transformed shape.
"
      end
    end

    class 189826 "Rect2D"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a rectangle in a two-dimensional Cartesian plot that has its edges parallel to the axis of the plot.<br/>
With this condition fast operations are possible for ray-casting and point-inside-testing.

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      classrelation 246786 // <realization>
	relation 246786 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 246786 // <realization>
	  b parent class_ref 189698 // IGeometric2D
      end

      classrelation 246914 // horizontalVector (<unidirectional association>)
	relation 246914 --->
	  a role_name "horizontalVector" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 246914 // horizontalVector (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      classrelation 247042 // verticalVector (<unidirectional association>)
	relation 247042 --->
	  a role_name "verticalVector" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 247042 // verticalVector (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      classrelation 247170 // lowerLeft (<unidirectional association>)
	relation 247170 --->
	  a role_name "lowerLeft" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 247170 // lowerLeft (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      classrelation 247298 // upperRight (<unidirectional association>)
	relation 247298 --->
	  a role_name "upperRight" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 247298 // upperRight (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      classrelation 247426 // lowerRight (<unidirectional association>)
	relation 247426 --->
	  a role_name "lowerRight" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 247426 // lowerRight (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      classrelation 247554 // upperLeft (<unidirectional association>)
	relation 247554 --->
	  a role_name "upperLeft" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 247554 // upperLeft (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      operation 535810 "Rect2D"
	public explicit_return_type ""
	nparams 2
	  param inout name "lowerLeft" type class_ref 137218 // Point2D
	  param inout name "upperRight" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param lowerLeft the first corner of the rectangle.
@param upperRight the second corner of the rectangle.
"
      end

      operation 535938 "Rect2D"
	public explicit_return_type ""
	nparams 4
	  param in name "x1" explicit_type "double"
	  param in name "y1" explicit_type "double"
	  param in name "x2" explicit_type "double"
	  param in name "y2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param x1 the X coordinate of the first corner.
@param y1 the Y coordinate of the first corner.
@param x2 the X coordinate of the opposite corner.
@param y2 the Y coordinate of the opposite corner.
"
      end

      operation 536066 "getLowerLeft"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the lower left corner of the rectangle.
"
      end

      operation 536194 "getUpperRight"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the upper right corner of the rectangle.
"
      end

      operation 536322 "getLowerRight"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the lower right corner of the rectangle.
"
      end

      operation 536450 "getUpperLeft"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the upper left corner of the rectangle.
"
      end

      operation 536578 "randomPoint"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 536706 "isInside"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 536834 "isInsideBorder"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 536962 "rayCast"
	public explicit_return_type "double"
	nparams 1
	  param inout name "ray" type class_ref 202498 // Ray2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 537090 "getBounds"
	public return_type class_ref 189826 // Rect2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 537218 "transform"
	public return_type class_ref 189698 // IGeometric2D
	nparams 1
	  param inout name "matrix" type class_ref 202754 // TransformMatrix2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 202498 "Ray2D"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a ray in a two-dimensional Cartesian plot.<br/>
A ray is represented by a {@link Point2D} and a directional {@link Vector2D}.

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      classrelation 246530 // start (<unidirectional association>)
	relation 246530 --->
	  a role_name "start" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 246530 // start (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      classrelation 246658 // direction (<unidirectional association>)
	relation 246658 --->
	  a role_name "direction" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 246658 // direction (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      operation 535170 "Ray2D"
	public explicit_return_type ""
	nparams 2
	  param inout name "start" type class_ref 137218 // Point2D
	  param inout name "direction" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param start the initial point from that the ray originates.
@param direction the direction in which the ray beams.
"
      end

      operation 535298 "Ray2D"
	public explicit_return_type ""
	nparams 4
	  param in name "startX" explicit_type "double"
	  param in name "startY" explicit_type "double"
	  param in name "endX" explicit_type "double"
	  param in name "endY" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param startX the X coordinate of the initial point from which the ray originates.
@param startY the Y coordinate of the initial point from which the ray originates.
@param endX the X coordinate of any point on the ray that is different from the start.
@param endY the Y coordinate of any point on the ray that is different from the start.
"
      end

      operation 535426 "getStart"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the origin of the ray.
"
      end

      operation 535554 "getDirection"
	public return_type class_ref 203138 // Vector2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the direction of the ray.
"
      end

      operation 535682 "transform"
	public return_type class_ref 202498 // Ray2D
	nparams 1
	  param inout name "matrix" type class_ref 202754 // TransformMatrix2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates a transformation matrix onto the ray.

@param matrix the {@link TransformMatrix2D} that gets calculated into this ray.
@return the transformed ray.
"
      end
    end

    class 202754 "TransformMatrix2D"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements a transformation matrix for two-dimensional geometry.<br/>
This is based on the svg standard, but does not implement the {@code skewX} and {@code skewY} operations.
See <a href=\"https://www.w3.org/TR/SVG/coords.html#TransformMatrixDefined\">w3c&reg; SVG TransformMatrix definition</a> for more information about these matrices.

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      classrelation 247682 // UNITY_MATRIX (<unidirectional association>)
	relation 247682 --->
	  a role_name "UNITY_MATRIX" init_value " new TransformMatrix2D(1.0d,0.0d,0.0d,1.0d,0.0d,0.0d)" class_relation const_relation public
	    comment "
This is the unity/identity matrix:<br/>
<code>[ 1 0 0 ]</code><br/>
<code>[ 0 0 0 ]</code><br/>
<code>[ 0 0 1 ]</code><br/>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 247682 // UNITY_MATRIX (<unidirectional association>)
	  b parent class_ref 202754 // TransformMatrix2D
      end

      attribute 212226 "a"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 212354 "b"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 212482 "c"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 212610 "d"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 212738 "e"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 212866 "f"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 537346 "TransformMatrix2D"
	private explicit_return_type ""
	nparams 6
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	  param in name "c" explicit_type "double"
	  param in name "d" explicit_type "double"
	  param in name "e" explicit_type "double"
	  param in name "f" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"javadoc\")
"
	
	
	
	comment "Creates a new transformation matrix according to the delivered parameters in the form:<br/>
<code>[ a c e ]</code><br/>
<code>[ b d f ]</code><br/>
<code>[ 0 0 1 ]</code><br/>
"
      end

      operation 537474 "translate"
	class_operation public return_type class_ref 202754 // TransformMatrix2D
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Produces a transformation matrix representing a translation operation.
@param x the X element of the translate.
@param y the Y element of the translate.
@return the new transform matrix.
"
      end

      operation 537602 "scale"
	class_operation public return_type class_ref 202754 // TransformMatrix2D
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Produces a transformation matrix representing a scaling operation.
@param x the X element of the scale.
@param y the Y element of the scale.
@return the new transform matrix.
"
      end

      operation 537730 "rotate"
	class_operation public return_type class_ref 202754 // TransformMatrix2D
	nparams 1
	  param in name "alpha" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Produces a transformation matrix representing a rotation operation around the origin of the coordinate system.
@param alpha the angle of the rotation in radians.
@return the new transform matrix.
"
      end

      operation 537858 "multiply"
	public return_type class_ref 202754 // TransformMatrix2D
	nparams 1
	  param inout name "matrix" type class_ref 202754 // TransformMatrix2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Multiplies this matrix with another transformation matrix.
@param matrix the other matrix to be multiplied with.
@return The new transform matrix.
"
      end

      operation 537986 "determinant"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the determinant of this transformation matrix.
@return the determinant.
"
      end

      operation 538114 "inverse"
	public return_type class_ref 202754 // TransformMatrix2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the inverse of this transformation matrix.
See <a href=\"http://mathworld.wolfram.com/MatrixInverse.html\">Wolfram mathworld</a> for more information.
@return The new transform matrix.
"
      end

      operation 538242 "multiply"
	public return_type class_ref 137218 // Point2D
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Multiplies this transformation matrix with a given point.<br/>
For a multiplication in two-dimensional Cartesian space the third field is set to 1:
<pre><code> [ x_new ]   [ a c e ]   [ x_old ]
[ y_new ] = [ b d f ] * [ y_old ]
[   1   ]   [ 0 0 1 ]   [   1   ]</code></pre>
@param point the {@link Point2D} to be transformed by this matrix.
@return the new transformed point.
"
      end

      operation 538370 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "op2" type class_ref 202754 // TransformMatrix2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this matrix to another transformation matrix.

@param op2 the {@link TransformMatrix2D} to be compared to this matrix.
@return true if both matrices are identical.
"
      end

      operation 538498 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this matrix to another object.

@param o the object to be compared to this matrix.
@return true if the object is identical to this matrix.
"
      end
    end

    class 202882 "Circle2D"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a circle in a two-dimensional Cartesian plot.<br/>
The circle is represented by a {@link Point2D} center and a {@code double} radius.

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      classrelation 244354 // <realization>
	relation 244354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 244354 // <realization>
	  b parent class_ref 189698 // IGeometric2D
      end

      classrelation 244482 // center (<unidirectional association>)
	relation 244482 --->
	  a role_name "center" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244482 // center (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      attribute 211074 "radius"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 528258 "Circle2D"
	public explicit_return_type ""
	nparams 2
	  param inout name "center" type class_ref 137218 // Point2D
	  param in name "radius" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param center the center point of the circle.
@param radius the radius of the circle.
"
      end

      operation 528386 "Circle2D"
	public explicit_return_type ""
	nparams 3
	  param in name "cx" explicit_type "double"
	  param in name "cy" explicit_type "double"
	  param in name "radius" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param cx the x coordinate of the center point of the circle.
@param cy the y coordinate of the center point of the circle.
@param radius the radius of the circle.
"
      end

      operation 528514 "getCenter"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the center point of the circle.
"
      end

      operation 528642 "getRadius"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the radius of the circle.
"
      end

      operation 528770 "randomPoint"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 528898 "isInside"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 529026 "isInsideBorder"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 529154 "rayCast"
	public explicit_return_type "double"
	nparams 1
	  param inout name "ray" type class_ref 202498 // Ray2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 529282 "getBounds"
	public return_type class_ref 189826 // Rect2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 529410 "transform"
	public return_type class_ref 189698 // IGeometric2D
	nparams 1
	  param inout name "matrix" type class_ref 202754 // TransformMatrix2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 203010 "Ellipse2D"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an ellipse in a two-dimensional Cartesian plot.<br/>
As an ellipse can be rotated around its center it is represented by a center {@link Point2D} and two {@link Vector2D} that are the horizontal and vertical radius.

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      classrelation 244610 // <realization>
	relation 244610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 244610 // <realization>
	  b parent class_ref 189698 // IGeometric2D
      end

      classrelation 244738 // center (<unidirectional association>)
	relation 244738 --->
	  a role_name "center" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244738 // center (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      classrelation 244866 // horizontal (<unidirectional association>)
	relation 244866 --->
	  a role_name "horizontal" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244866 // horizontal (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      attribute 211202 "horizontalLength"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 244994 // vertical (<unidirectional association>)
	relation 244994 --->
	  a role_name "vertical" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244994 // vertical (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      attribute 211330 "verticalLength"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 211458 "angle"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 245122 // transform (<unidirectional association>)
	relation 245122 --->
	  a role_name "transform" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245122 // transform (<unidirectional association>)
	  b parent class_ref 202754 // TransformMatrix2D
      end

      classrelation 245250 // transformInverse (<unidirectional association>)
	relation 245250 --->
	  a role_name "transformInverse" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245250 // transformInverse (<unidirectional association>)
	  b parent class_ref 202754 // TransformMatrix2D
      end

      operation 529538 "Ellipse2D"
	public explicit_return_type ""
	nparams 3
	  param inout name "center" type class_ref 137218 // Point2D
	  param in name "rx" explicit_type "double"
	  param in name "ry" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param center the center point of the ellipse.
@param rx the radius of the ellipse in X direction.
@param ry the radius of the ellipse in Y direction.
"
      end

      operation 529666 "Ellipse2D"
	public explicit_return_type ""
	nparams 3
	  param inout name "center" type class_ref 137218 // Point2D
	  param inout name "horizontal" type class_ref 203138 // Vector2D
	  param inout name "vertical" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param center the center point of the ellipse.
@param horizontal the horizontal radius of the ellipse as a vector.
@param vertical the vertical radius of the ellipse as a vector.
"
      end

      operation 529794 "getCenter"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the center point of the ellipse.
"
      end

      operation 529922 "getHorizontalLength"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the length of the horizontal radius vector of the ellipse.
"
      end

      operation 530050 "getVerticalLength"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the length of the vertical radius vector of the ellipse.
"
      end

      operation 530178 "getAngle"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the angle by which the ellipse is rotated.
"
      end

      operation 530306 "randomPoint"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 530434 "isInside"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 530562 "isInsideBorder"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 530690 "rayCast"
	public explicit_return_type "double"
	nparams 1
	  param inout name "ray" type class_ref 202498 // Ray2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 530818 "getBounds"
	public return_type class_ref 189826 // Rect2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 530946 "transform"
	public return_type class_ref 189698 // IGeometric2D
	nparams 1
	  param inout name "matrix" type class_ref 202754 // TransformMatrix2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 203138 "Vector2D"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a vector in a two-dimensional Cartesian plot.<br/>
Simple arithmetic operations are supported.

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      classrelation 247810 // X_VECTOR (<unidirectional association>)
	relation 247810 --->
	  a role_name "X_VECTOR" init_value " new Vector2D(1.0d,0.0d)" class_relation const_relation public
	    comment "
This is a vector that is parallel to the X axis.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 247810 // X_VECTOR (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      classrelation 247938 // Y_VECTOR (<unidirectional association>)
	relation 247938 --->
	  a role_name "Y_VECTOR" init_value " new Vector2D(0.0d,1.0d)" class_relation const_relation public
	    comment "
This is a vector that is parallel to the Y axis.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 247938 // Y_VECTOR (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      classrelation 248066 // ZERO_VECTOR (<unidirectional association>)
	relation 248066 --->
	  a role_name "ZERO_VECTOR" init_value " new Vector2D(0.0d,0.0d)" class_relation const_relation public
	    comment "
This is the zero vector. It does not have a direction neither a length.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 248066 // ZERO_VECTOR (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      attribute 212994 "x"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 213122 "y"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 538626 "Vector2D"
	public explicit_return_type ""
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param x the X parameter of the vector.
@param y the Y parameter of the vector.
"
      end

      operation 538754 "calculateFromPolar"
	class_operation public return_type class_ref 203138 // Vector2D
	nparams 2
	  param in name "length" explicit_type "double"
	  param in name "heading" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates a vector based on the length and the heading of the vector.
@param length the length of the vector.
@param heading the angle at which the vector points.
@return a new vector derived from its polar representation.
"
      end

      operation 538882 "getX"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the X parameter of the vector.
"
      end

      operation 539010 "getY"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the Y parameter of the vector.
"
      end

      operation 539138 "add"
	public return_type class_ref 203138 // Vector2D
	nparams 1
	  param inout name "op2" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a vector onto this vector.
@param op2 the vector to be added.
@return the new calculated vector.
"
      end

      operation 539266 "sub"
	public return_type class_ref 203138 // Vector2D
	nparams 1
	  param inout name "op2" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subtracts a vector from this vector.
@param op2 the vector to be subtracted.
@return the new calculated vector.
"
      end

      operation 539394 "multiply"
	public return_type class_ref 203138 // Vector2D
	nparams 1
	  param in name "n" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Multiplies a vector with a double.
@param n the times the vector is to be taken.
@return the new calculated vector.
"
      end

      operation 539522 "invert"
	public return_type class_ref 203138 // Vector2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inverts this vector.
@return the inverted vector.
"
      end

      operation 539650 "isAbsoluteParallel"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "op2" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this vector and another vector are parallel to each other.<br/>
If one of the vectors is the zero vector this method always returns {@code true}.
@param op2 the second vector.
@return {@code true} if the two vectors are parallel.
"
      end

      operation 539778 "isParallel"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "op2" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this vector and another vector are parallel to each other or rotated by 180 degrees to each other.<br/>
If one of the vectors is the zero vector this method always returns {@code true}.
@param op2 the second vector.
@return {@code true} if the two vectors are parallel.
"
      end

      operation 539906 "angleTo"
	public explicit_return_type "double"
	nparams 1
	  param inout name "op2" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the angle between two vectors in radians.<br/>
Both vectors must be different from the zero-vector.
@param op2 the second vector.
@return the angle in radians.
"
      end

      operation 540034 "length"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the length of the vector.
@return the length of the vector.
"
      end

      operation 540162 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "op2" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks equality for this vector with another vector.
@param op2 the second vector.
@return true if the vectors are equal in direction and length.
"
      end

      operation 540290 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 203266 "Line2D"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a line in a two-dimensional Cartesian plot.<br/>
Every line consists of a starting point and an ending point represented by a {@link Point2D}.<br/>
In addition the line between these two points can be represented as a {@link Vector2D}. 

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      classrelation 245378 // <realization>
	relation 245378 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 245378 // <realization>
	  b parent class_ref 189698 // IGeometric2D
      end

      classrelation 245506 // start (<unidirectional association>)
	relation 245506 --->
	  a role_name "start" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245506 // start (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      classrelation 245634 // line (<unidirectional association>)
	relation 245634 --->
	  a role_name "line" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245634 // line (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      classrelation 245762 // end (<unidirectional association>)
	relation 245762 --->
	  a role_name "end" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245762 // end (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      attribute 211586 "zeroX"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 211714 "zeroY"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 531074 "Line2D"
	public explicit_return_type ""
	nparams 2
	  param inout name "start" type class_ref 137218 // Point2D
	  param inout name "line" type class_ref 203138 // Vector2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param start the starting point of the line.
@param line the vector representing the line.
"
      end

      operation 531202 "Line2D"
	public explicit_return_type ""
	nparams 2
	  param inout name "start" type class_ref 137218 // Point2D
	  param inout name "end" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param start the starting point of the line.
@param end the ending point of the line.
"
      end

      operation 531330 "Line2D"
	public explicit_return_type ""
	nparams 4
	  param in name "startX" explicit_type "double"
	  param in name "startY" explicit_type "double"
	  param in name "endX" explicit_type "double"
	  param in name "endY" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param startX the X coordinate of the starting point of the line.
@param startY the Y coordinate of the starting point of the line.
@param endX the X coordinate of the ending point of the line.
@param endY the Y coordinate of the ending point of the line.
"
      end

      operation 531458 "getStart"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the starting point of the line.
"
      end

      operation 531586 "getDirection"
	public return_type class_ref 203138 // Vector2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the vector representing the line.
"
      end

      operation 531714 "getEnd"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the ending point of the line.
"
      end

      operation 531842 "randomPoint"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 531970 "isInside"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 532098 "isInsideBorder"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 532226 "rayCast"
	public explicit_return_type "double"
	nparams 1
	  param inout name "ray" type class_ref 202498 // Ray2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 532354 "getBounds"
	public return_type class_ref 189826 // Rect2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 532482 "transform"
	public return_type class_ref 203266 // Line2D
	nparams 1
	  param inout name "matrix" type class_ref 202754 // TransformMatrix2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 203394 "Polyline2D"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements a polyline in a two-dimensional Cartesian plot.<br/>
The polyline is represented by a starting point represented by {@link Point2D} and all edges as {@link Vector2D}.<br/>
If the last side ends in the starting point the polyline is a closed polygon.

@author Arno von Borries
@author Jan Phillip Kretzschmar
@author Andreas Walscheid

"
      classrelation 246018 // <realization>
	relation 246018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 246018 // <realization>
	  b parent class_ref 189698 // IGeometric2D
      end

      classrelation 246146 // vertexes (<unidirectional association>)
	relation 246146 --->
	  a role_name "vertexes" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 246146 // vertexes (<unidirectional association>)
	  b parent class_ref 137218 // Point2D
      end

      classrelation 246274 // edges (<unidirectional association>)
	relation 246274 --->
	  a role_name "edges" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 246274 // edges (<unidirectional association>)
	  b parent class_ref 203138 // Vector2D
      end

      attribute 212098 "isClosed"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 246402 // boundingRect (<unidirectional association>)
	relation 246402 --->
	  a role_name "boundingRect" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 246402 // boundingRect (<unidirectional association>)
	  b parent class_ref 189826 // Rect2D
      end

      operation 533890 "Polyline2D"
	public explicit_return_type ""
	nparams 2
	  param inout name "vertexes" type class_ref 137218 // Point2D
	multiplicity "[]"
	  param inout name "isClosed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param vertexes the vertexes of the polyline or polygon.
@param isClosed true if the sum of the edges is the zero vector.
"
      end

      operation 534018 "getVertexes"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the starting point of the polyline.
"
      end

      operation 534146 "getEdges"
	public return_type class_ref 203138 // Vector2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the edges of the polyline.
"
      end

      operation 534274 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if this polyline is a polygon.
"
      end

      operation 534402 "randomPoint"
	public return_type class_ref 137218 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 534530 "isInside"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 534658 "isInsideBorder"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "point" type class_ref 137218 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 534786 "rayCast"
	public explicit_return_type "double"
	nparams 1
	  param inout name "ray" type class_ref 202498 // Ray2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 534914 "getBounds"
	public return_type class_ref 189826 // Rect2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 535042 "transform"
	public return_type class_ref 203394 // Polyline2D
	nparams 1
	  param inout name "matrix" type class_ref 202754 // TransformMatrix2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 138626 "shapes"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 191234 "IGeometric2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 189698 // IGeometric2D
      end
    end

    artifact 191362 "Circle2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.util.Util;
${definition}"
      associated_elems
	class_ref 202882 // Circle2D
      end
    end

    artifact 191490 "Ellipse2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.util.Util;
${definition}"
      associated_elems
	class_ref 203010 // Ellipse2D
      end
    end

    artifact 191618 "Line2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.util.Util;
${definition}"
      associated_elems
	class_ref 203266 // Line2D
      end
    end

    artifact 191746 "Point2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.util.Util;
${definition}"
      associated_elems
	class_ref 137218 // Point2D
      end
    end

    artifact 191874 "Polyline2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.util.Util;
${definition}"
      associated_elems
	class_ref 203394 // Polyline2D
      end
    end

    artifact 192002 "Ray2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 202498 // Ray2D
      end
    end

    artifact 192130 "Rect2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.util.Util;
${definition}"
      associated_elems
	class_ref 189826 // Rect2D
      end
    end

    artifact 192258 "TransformMatrix2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.util.Util;
${definition}"
      associated_elems
	class_ref 202754 // TransformMatrix2D
      end
    end

    artifact 192386 "Vector2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.util.Util;
${definition}"
      associated_elems
	class_ref 203138 // Vector2D
      end
    end
  end
end
