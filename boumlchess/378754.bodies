class Rule
!!!1825922.java!!!	Rule(inout lhs : List<String>, inout rhs : List<String>, in probability : float)
		this.lhs = lhs;
		this.rhs = rhs;
		this.PROB = validateProb(probability);
!!!1826050.java!!!	Rule(inout lhs : List<String>, in probability : float)
		this.lhs = lhs;
		this.rhs = null;
		this.PROB = validateProb(probability);
!!!1826178.java!!!	Rule(in lhs : String, in rhs : String, in probability : float)
		if( "".equals(lhs))
			this.lhs = new ArrayList<>();
		else
			this.lhs = new ArrayList<>(Arrays.asList(lhs.split("\\s*,\\s*")));

		if( "".equals(rhs))
			this.rhs = new ArrayList<>();
		else
			this.rhs = new ArrayList<>(Arrays.asList(rhs.split("\\s*,\\s*")));

		this.PROB = validateProb(probability);
!!!1826306.java!!!	validateProb(in prob : float) : float
		if (prob >= 0.0 && prob <= 1.0 )
			return prob;
		else
			return (float) 0.5; // probably should throw exception
!!!1826434.java!!!	derives(inout sentForm : List<String>) : boolean
		if (rhs.size() != sentForm.size())
			return false;
		for (int i=0; i < sentForm.size(); i++ ) {
			if(!Objects.equals(rhs.get(i), sentForm.get(i)))
				return false;
		}
		return true;
!!!1826562.java!!!	derives(in terminal : String) : boolean
		return rhs.size() == 1 && rhs.get(0).equals(terminal);
!!!1826690.java!!!	toString() : String
		StringBuilder output = new StringBuilder();

		for (String lh : lhs) {
			output.append(lh);
		}

		output.append(" -> ");

		for (String rh : rhs) {
			output.append(rh);
		}

		output.append(" ").append(String.valueOf(PROB));

		return output.toString();
