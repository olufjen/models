format 223

classinstance 128002 class_ref 363906 // AChessProblemSolver
 name ""  xyz 83 231 2000
classinstance 128130 class_ref 510722 // PlannerQueueBasedSearch
 name ""  xyz 375 233 2000
classinstance 128258 class_ref 510850 // PlannerQueueSearch
 name ""  xyz 391 399 2000
classinstance 128642 class_ref 194306 // NodeExpander
 name ""  xyz 594 397 2000
classinstance 129282 class_ref 510850 // PlannerQueueSearch
 name ""  xyz 771 232 2000
classinstance 129666 class_ref 504066 // ChessSearchProblem
 name ""  xyz 770 330 2000
classinstance 129794 class_ref 194306 // NodeExpander
 name ""  xyz 980 99 2000
note 130690 "PlannerQueueBasedSearch - an implementation of an informed search strategy described in chapter 3.5 p. 92
 The general approach is called best first search.   "
  xyzwh 80 53 2000 219 93
note 130818 "  1. The findState call
  2. The queuesearch.findnode
  3. The findnode method removes a node from frontier (The queue)
calls the problem testSolution method with this node
If the testSolution return true then findnode returns an optional node.
If not the current node is expanded using the nodeexpander expand method.
The expand method calls the problem getResult method, that must return a new state for the next node.
This call is repeated for all available actions in the problem.
The expand method returns a list of successor nodes.  "
  xyzwh 109 552 2000 311 211
classinstance 131458 class_ref 504066 // ChessSearchProblem
 name ""  xyz 988 171 2000
classinstance 131842 class_ref 135426 // ResultFunction
 name ""  xyz 1059 292 2000
textcanvas 132226 "The signature of the result function 
r = (s,a) -> a.findPlannerState(s)"
  xyzwh 928 332 2000 114 59
classinstance 132482 class_ref 497282 // ChessPlannerActionImpl
 name ""  xyz 942 476 2000
note 132994 "A root node is created and added to the frontier"
  xyzwh 621 54 2000 125 65
textcanvas 133378 "For all available actions in the Problem 
return a successor state from the Problem getResult method"
  xyzwh 997 16 2000 202 57
textcanvas 133762 "The testGoal function  is using the goaltest predicate function.
The predicate function calls the state testEnd function"
  xyzwh 733 481 2000 153 71
note 134018 "Use the state testEnd function to fill the otherSchemaList based on parameters like :
The move number
etc.
Check the checkMovenumber function and the APerceptor.
Create other objects that implements PlannerState and ChessPlannerAction interfaces.
Objects that can be returned with the node"
  xyzwh 568 564 2000 293 161
linkcanvas 128386
  from ref 128002 z 2001 to ref 128130
dirscanvas 128514 z 1000 linkcanvas_ref 128386
  
  forward_label "1 findState()" xyz 261 213 3000
linkcanvas 128770
  from ref 128130 z 2001 to ref 128258
dirscanvas 128898 z 1000 linkcanvas_ref 128770
  
  forward_label "2 getNodeExpander()" xyz 467 322 3000
linkcanvas 129026
  from ref 128258 z 2001 to ref 128642
dirscanvas 129154 z 1000 linkcanvas_ref 129026
  
  forward_label "3 useParentLinks()" xyz 505 379 3000
linkcanvas 129410
  from ref 128130 z 2001 to ref 129282
dirscanvas 129538 z 1000 linkcanvas_ref 129410
  
  forward_label "4 findNode()" xyz 618 213 3000
linkcanvas 129922
  from ref 129282 z 2001 to point 825 107
  line 130050 z 2001 to ref 129794
dirscanvas 130178 z 1000 linkcanvas_ref 130050
  
  forward_label "5 createRootNode()" xyz 856 79 3000
selflinkcanvas 130306 classinstance_ref 129282 // :PlannerQueueSearch
  xy 801 249
  
  forward_label "6 addToFrontier()" xyz 669 258 3000
linkcanvas 130434
  from ref 129282 z 2001 to ref 129666
dirscanvas 130562 z 1000 linkcanvas_ref 130434
  
  forward_label "7 testSolution()" xyz 847 287 3000
linkcanvas 131202
  from ref 129282 z 2001 to ref 129794
dirscanvas 131330 z 1000 linkcanvas_ref 131202
  
  forward_label "9 expand()" xyz 879 147 3000
linkcanvas 131586
  from ref 129794 z 2001 to ref 131458
dirscanvas 131714 z 1000 linkcanvas_ref 131586
  
  forward_label "10 getResult()" xyz 1053 123 3000
linkcanvas 131970
  from ref 131458 z 2001 to ref 131842
dirscanvas 132098 z 1000 linkcanvas_ref 131970
  
  forward_label "11 apply" xyz 1089 223 3000
linkcanvas 132738 decenter_end 754
  from ref 131842 z 2001 to ref 132482
dirscanvas 132866 z 1000 linkcanvas_ref 132738
  
  forward_label "12 findPlannerState()" xyz 1084 418 3000
selflinkcanvas 133634 classinstance_ref 129666 // :ChessSearchProblem
  xy 832 345
  
  forward_label "8 testGoal()" xyz 838 373 3000
msgs
  msg operation_ref 2242818 // "findState(inout p : Problem) : Optional<PlannerState>"
    forward ranks 1 "1" dirscanvas_ref 128514
    msgs
      msg operation_ref 468098 // "getNodeExpander() : NodeExpander"
	forward ranks 2 "1.1" dirscanvas_ref 128898
	msgs
	  msg operation_ref 462978 // "useParentLinks(inout s : boolean) : NodeExpander"
	    forward ranks 3 "1.1.1" dirscanvas_ref 129154
	    no_msg
	msgsend
      msg operation_ref 2277890 // "findNode(inout problem : Problem, inout frontier : Queue<Node<PlannerState, ChessPlannerAction>>) : Node"
	forward ranks 4 "1.2" dirscanvas_ref 129538
	msgs
	  msg operation_ref 463106 // "createRootNode(inout state : S) : Node"
	    forward ranks 5 "1.2.1" dirscanvas_ref 130178
	    no_msg
	  msg operation_ref 2243202 // "addToFrontier(inout node : Node) : void"
	    forward ranks 6 "1.2.2" selflinkcanvas_ref 130306
	    msgs
	      msg operation_ref 2278146 // "testSolution(inout node : Node) : boolean"
		forward ranks 7 "1.2.2.1" dirscanvas_ref 130562
		msgs
		  msg operation_ref 2235138 // "testGoal(inout state : PlannerState) : boolean"
		    forward ranks 8 "1.2.2.1.1" selflinkcanvas_ref 133634
		    no_msg
		msgsend
	      msg operation_ref 463362 // "expand(inout node : Node, inout problem : Problem) : Node"
		forward ranks 9 "1.2.2.2" dirscanvas_ref 131330
		msgs
		  msg operation_ref 2235010 // "getResult(inout state : PlannerState, inout action : ChessPlannerAction) : PlannerState"
		    forward ranks 10 "1.2.2.2.1" dirscanvas_ref 131714
		    msgs
		      explicitmsg "apply"
			forward ranks 11 "1.2.2.2.1.1" dirscanvas_ref 132098
			msgs
			  msg operation_ref 2284802 // "findPlannerState(inout a : ChessPlannerAction) : PlannerState"
			    forward ranks 12 "1.2.2.2.1.1.1" dirscanvas_ref 132866
			    no_msg
			msgsend
		    msgsend
		msgsend
	    msgsend
	msgsend
    msgsend
msgsend
line 132354 -_-_
  from ref 132226 z 2001 to ref 131842
line 133122 -_-_
  from ref 132994 z 2002 to ref 130050
line 133250 -_-_
  from ref 132994 z 2001 to ref 130306
line 133506 -_-_
  from ref 133378 z 2002 to ref 131586
line 133890 -_-_
  from ref 133762 z 2001 to ref 133634
line 134146 -_-_
  from ref 134018 z 2001 to ref 133762
end
