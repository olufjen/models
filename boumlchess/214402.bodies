class ExtendedMapAgentView
!!!602498.java!!!	setData(inout scenario : Scenario, inout destinations : List<String>, inout agentMap : Map) : void
		this.scenario = scenario;
		this.destinations = destinations;
		this.agentMap = agentMap;
		repaint();
!!!602626.java!!!	paintMap(inout g2 : java.awt.Graphics2D) : void
		Map envMap = getMapEnv().getMap();
		Map aMap = (agentMap != null) ? agentMap : envMap;
		List<Roadblock> roadblocks = new ArrayList<Roadblock>();
		for (String l1 : envMap.getLocations()) {
			Point2D pt1 = envMap.getPosition(l1);
			List<String> linkedLocs = envMap.getPossibleNextLocations(l1);
			for (String l2 : aMap.getPossibleNextLocations(l1))
				if (!linkedLocs.contains(l2))
					linkedLocs.add(l2);
			for (String l2 : linkedLocs) {
				Point2D pt2 = envMap.getPosition(l2);
				g2.setColor(Color.lightGray);
				g2.drawLine(x(pt1), y(pt1), x(pt2), y(pt2));
				boolean blockedInEnv = !envMap.getPossibleNextLocations(l2)
						.contains(l1);
				boolean blockedInAgent = !aMap.getPossibleNextLocations(l2)
						.contains(l1);
				roadblocks.add(new Roadblock(pt1, pt2, blockedInEnv,
						blockedInAgent));
				if (blockedInEnv && blockedInAgent) {
					boolean blockedInEnvOtherDir = !envMap
							.getPossibleNextLocations(l1).contains(l2);
					boolean blockedInAgentOtherDir = !aMap
							.getPossibleNextLocations(l1).contains(l2);
					roadblocks.add(new Roadblock(pt2, pt1,
							blockedInEnvOtherDir, blockedInAgentOtherDir));
				}
			}
		}
		for (Roadblock block : roadblocks)
			paintRoadblock(g2, block);
!!!602754.java!!!	paintLoc(inout g2 : Graphics2D, in loc : String) : void
		Map map = getMapEnv().getMap();
		Point2D pt = map.getPosition(loc);
		if (pt != null) {
			int x = x(pt);
			int y = y(pt);
			String info = "";
			List<String> track = new ArrayList<String>();
			if (!env.getAgents().isEmpty())
				// show details only for track of first agent...
				track = getTrack(env.getAgents().get(0));
			ArrayList<Integer> list = new ArrayList<Integer>();
			for (int i = 0; i < track.size(); i++)
				if (track.get(i).equals(loc))
					list.add(i + 1);
			if (!list.isEmpty())
				info = list.toString();
//			if (getMapEnv().hasObjects(loc)) {
//				g2.setColor(Color.green);
//				g2.fillOval(x - 5, y - 5, 10, 10);
//			}
			if (scenario != null && scenario.getInitAgentLocation().equals(loc)) {
				g2.setColor(Color.red);
				g2.fillOval(x - 7, y - 7, 14, 14);
			}
			if (getAgentLocs().contains(loc)) {
				g2.setColor(Color.red);
				g2.fillOval(x - 4, y - 4, 8, 8);
			}
//			if (maModel.hasInfos(loc)) {
//				g2.setColor(Color.blue);
//				g2.drawString("i", x, y + 12);
//			}
			// if (model.isStart(loc))
			// g2.setColor(Color.red);
			// else
			if (destinations != null && destinations.contains(loc))
				g2.setColor(Color.green);
			else if (track.contains(loc))
				g2.setColor(Color.black);
			else
				g2.setColor(Color.gray);
			g2.drawString(loc + info, x, y);
		}
!!!602882.java!!!	paintRoadblock(inout g2 : java.awt.Graphics2D, inout block : ExtendedMapAgentView::Roadblock) : void
		if (block.inEnvMap || block.inAgentMap) {
			int x = (int) (0.2 * x(block.pos1) + 0.8 * x(block.pos2) - 4);
			int y = (int) (0.2 * y(block.pos1) + 0.8 * y(block.pos2) - 4);
			if (!block.inAgentMap)
				g2.setColor(Color.blue); // agent doesn't know the road block
			else if (!block.inEnvMap)
				g2.setColor(Color.red); // agent doesn't know the way
			else
				g2.setColor(Color.lightGray);
			g2.fillRect(x, y, 9, 9);
		}
