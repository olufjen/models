class ThePeas
!!!2300034.java!!!	ThePeas(inout player : APlayer, inout opponent : APlayer, in moveNr : int)
		super();
		this.player = player;
		this.opponent = opponent;
		this.movNr = moveNr;
		moveKey = String.valueOf(moveNr);
		performance = new HashMap<String,String[]>();
		executable = new HashMap<String,String[]>();
		rankValues = new HashMap<String,Integer>();
		contex = new FunctionContect();
		boolean flag = moveNr/2 < 8; // Signals the first 5 opening moves
		try {
			fw = new FileWriter(outputFileName, true);
		} catch (IOException e1) {

			e1.printStackTrace();
		}
	    writer = new PrintWriter(new BufferedWriter(fw));
//		c = (HashMap<String,String[]> m) -> getPerformance().put(String xkey,String[] {);
//		f = (String s) -> getPerformance().get(notations[movNr]);
		if (flag) {
/*			for (int i = 0;i<9;i++) {
				rankValues.put(notations[i],new Integer(i));
			}*/
			performance.put(notations[0],new String[] {null,null,"d4",null});
			performance.put(notations[1],new String[] {null,null,"e4",null});
			performance.put(notations[2],new String[] {null,null,"c4",null});
			performance.put(notations[3],new String[] {null,"WhiteKnight2","f3",null});
			performance.put(notations[4],new String[] {null,"WhiteKnight1","c3",null});
			performance.put(notations[5],new String[] {null,null,"e3",null});
			performance.put(notations[6],new String[] {null,"WhiteBishop2","d3",null});
			performance.put(notations[8],new String[] {null,null,"h3",null});
			performance.put(notations[7],new String[] {null,"WhiteRook2","f1",null});
			//			performance.put(notations[8],new String[] {null,"WhiteBishop2","d3",null});
		
		}

!!!2300162.java!!!	addEntries(in key : String, in rank : int, inout  : String...names) : void
		performance.put(key, names);
//		rankValues.put(key,new Integer(rank));
!!!2300290.java!!!	addExecutable(in key : String, in rank : int, inout  : String...names) : void
		executable.put(key, names);
		rankValues.put(key,new Integer(rank));
!!!2300418.java!!!	checkMoves(inout theplayer : APlayer) : void
		ArrayList<AgamePiece> pieces = theplayer.getMygamePieces();
		if (pieces != null && !pieces.isEmpty()) {
			for (AgamePiece piece : pieces ) {
				List<ApieceMove> moves = piece.getMyMoves();
			}
		}

!!!2300546.java!!!	selectExecutable() : String
		boolean keyflag = (executable == null || executable.isEmpty());
		if (keyflag) {
			writer.println("No Sorted map ");
			writer.flush();
			return null;
		}
		Map<String,Integer> sortedRanks = rankValues
		        .entrySet()
		        .stream()
		        .sorted(Map.Entry.comparingByValue())
		        .collect(
		        		Collectors.toMap(e -> e.getKey(), e -> e.getValue(), (e1, e2) -> e2,
		                LinkedHashMap::new));
//		List<Integer> listranks = new ArrayList<Integer>(rankValues.values());
//		List<Integer> result = (List<Integer>) listranks.stream().sorted((o1, o2)->o1.compareTo(o2));
	    Set< String> names = executable.keySet();
//	    List execValues = new ArrayList(executable.values());
	    writer.println("Executable keys ");
	    for (String key:names) {
	    	writer.println(key);
	    }
//		writer.println("Executable map values"+execValues);
		writer.println("Unsorted map "+rankValues);
		writer.println("Sorted map "+sortedRanks);
		Set<String> keys = sortedRanks.keySet();
		String firstKey = null;
	    for (String key:keys) {
	    	writer.println("The sorted selected key "+key);
	    	firstKey = key;
	    	break;
	    }
	    String[] returnValues = executable.get(firstKey);
		writer.flush();
		return returnValues;
!!!2300674.java!!!	selectExecwithKey(in key : String) : String
		String[] returnValues = executable.get(key);
		return returnValues;
!!!2300802.java!!!	selectPerformance(in key : String) : String

		return getPerformance().get(key);

!!!2300930.java!!!	getC() : Consumer<HashMap<String, String[]>>
		return c;
!!!2301058.java!!!	setC(inout c : Consumer<HashMap<String, String[]>>) : void
		this.c = c;
!!!2301186.java!!!	getF() : Function<String, String[]>
		return f;
!!!2301314.java!!!	setF(inout f : Function<String, String[]>) : void
		this.f = f;
!!!2301442.java!!!	getPlayer() : APlayer
		return player;
!!!2301570.java!!!	setPlayer(inout player : APlayer) : void
		this.player = player;
!!!2301698.java!!!	getOpponent() : APlayer
		return opponent;
!!!2301826.java!!!	setOpponent(inout opponent : APlayer) : void
		this.opponent = opponent;
!!!2301954.java!!!	getMovNr() : int
		return movNr;
!!!2302082.java!!!	setMovNr(in movNr : int) : void
		this.movNr = movNr;
!!!2302210.java!!!	getPerformance() : HashMap<String, String[]>
		return performance;
!!!2302338.java!!!	setPerformance(inout performance : HashMap<String, String[]>) : void
		this.performance = performance;
