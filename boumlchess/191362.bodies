class CSP
!!!448642.java!!!	CSP()
        variables = new ArrayList<>();
        domains = new ArrayList<>();
        constraints = new ArrayList<>();
        varIndexHash = new Hashtable<>();
        cnet = new Hashtable<>();
!!!448770.java!!!	CSP(inout vars : List<VAR>)
        this();
        vars.forEach(this::addVariable);
!!!448898.java!!!	addVariable(inout var : VAR) : void
        if (!varIndexHash.containsKey(var)) {
            Domain<VAL> emptyDomain = new Domain<>(Collections.emptyList());
            variables.add(var);
            domains.add(emptyDomain);
            varIndexHash.put(var, variables.size() - 1);
            cnet.put(var, new ArrayList<>());
        } else {
            throw new IllegalArgumentException("Variable with same name already exists.");
        }
!!!449026.java!!!	getVariables() : List<VAR>
        return Collections.unmodifiableList(variables);
!!!449154.java!!!	indexOf(inout var : Variable) : int
        return varIndexHash.get(var);
!!!449282.java!!!	setDomain(inout var : VAR, inout domain : Domain) : void
        domains.set(indexOf(var), domain);
!!!449410.java!!!	getDomain(inout var : Variable) : Domain
        return domains.get(varIndexHash.get(var));
!!!449538.java!!!	removeValueFromDomain(inout var : VAR, inout value : VAL) : boolean
        Domain<VAL> currDomain = getDomain(var);
        List<VAL> values = new ArrayList<>(currDomain.size());
        for (VAL v : currDomain)
            if (!v.equals(value))
                values.add(v);
        if (values.size() < currDomain.size()) {
            setDomain(var, new Domain<>(values));
            return true;
        }
        return false;
!!!449666.java!!!	addConstraint(inout constraint : Constraint) : void
        constraints.add(constraint);
        for (VAR var : constraint.getScope())
            cnet.get(var).add(constraint);
!!!449794.java!!!	removeConstraint(inout constraint : Constraint) : boolean
        boolean result = constraints.remove(constraint);
        if (result)
            for (VAR var : constraint.getScope())
                cnet.get(var).remove(constraint);
        return result;
!!!449922.java!!!	getConstraints() : Constraint
        return constraints;
!!!450050.java!!!	getConstraints(inout var : Variable) : Constraint
        return cnet.get(var);
!!!450178.java!!!	getNeighbor(inout var : VAR, inout constraint : Constraint) : VAR
        List<VAR> scope = constraint.getScope();
        if (scope.size() == 2) {
            if (var.equals(scope.get(0)))
                return scope.get(1);
            else if (var.equals(scope.get(1)))
                return scope.get(0);
        }
        return null;
!!!450306.java!!!	copyDomains() : CSP
        CSP<VAR, VAL> result;
        try {
            result = (CSP<VAR, VAL>) clone();
            result.domains = new ArrayList<>(domains.size());
            result.domains.addAll(domains);
        } catch (CloneNotSupportedException e) {
            throw new UnsupportedOperationException("Could not copy domains.");
        }
        return result;
