class BCProofStep
!!!289154.java!!!	BCProofStep(inout implication : Clause, inout predecessors : List<ProofStep>, inout goal : Literal)
			this.implication = implication;
			this.predecessors = predecessors;
			this.goal = goal;
			this.setStepNumber(this.predecessors.size()+1);
!!!289282.java!!!	getPredecessorSteps() : ProofStep
			return predecessors;
!!!289410.java!!!	getProof() : String
			return this.toString();
!!!289538.java!!!	toString() : String
			StringBuilder result = new StringBuilder();
			if (implication.getLiterals().size()>1){
				int i =0;
				for (Literal l :
						implication.getNegativeLiterals()) {
					result.append((new Literal(l.getAtomicSentence())).toString());
					i++;
					if (i<implication.getNegativeLiterals().size())
						result.append(" AND ");
				}
				result.append(" => ");
				result.append(implication.getPositiveLiterals().get(0));
				return result.toString();
			}
			result.append(implication.getLiterals().toString());
			return result.toString();
!!!289666.java!!!	getJustification() : String
			return "To Prove Backwards :" + goal.toString();
