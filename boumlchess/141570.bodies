class NondeterministicVacuumEnvironment
!!!185602.java!!!	NondeterministicVacuumEnvironment()
        super();
!!!185730.java!!!	NondeterministicVacuumEnvironment(inout locAState : VacuumEnvironment::LocationState, inout locBState : VacuumEnvironment::LocationState)
        super(locAState, locBState);
!!!185858.java!!!	executeAction(inout a : Agent, inout action : Action) : void
        if (ACTION_MOVE_RIGHT == action) {
            envState.setAgentLocation(a, LOCATION_B);
            updatePerformanceMeasure(a, -1);
        } else if (ACTION_MOVE_LEFT == action) {
            envState.setAgentLocation(a, LOCATION_A);
            updatePerformanceMeasure(a, -1);
        } else if (ACTION_SUCK == action) {
            // case: square is dirty
            if (VacuumEnvironment.LocationState.Dirty == envState.getLocationState(envState.getAgentLocation(a))) {
                String currentLocation = envState.getAgentLocation(a);
                String adjacentLocation = (currentLocation.equals("A")) ? "B" : "A";
                // always clean current square
                envState.setLocationState(currentLocation, VacuumEnvironment.LocationState.Clean);
                // possibly clean adjacent square
                if (Math.random() > 0.5) {
                    envState.setLocationState(adjacentLocation, VacuumEnvironment.LocationState.Clean);
                }
            } // case: square is clean
            else if (VacuumEnvironment.LocationState.Clean == envState.getLocationState(envState.getAgentLocation(a))) {
                // possibly dirty current square
                if (Math.random() > 0.5) {
                    envState.setLocationState(envState.getAgentLocation(a), VacuumEnvironment.LocationState.Dirty);
                }
            }
        } else if (action.isNoOp()) {
            isDone = true;
        }
