class ImplicationElimination
!!!385794.java!!!	eliminate(inout sentence : Sentence) : Sentence
		ImplicationElimination eliminator = new ImplicationElimination();

		Sentence result = sentence.accept(eliminator, null);

		return result;
!!!385922.java!!!	visitBinarySentence(inout s : ComplexSentence, inout arg : Object) : Sentence
		Sentence result = null;
		if (s.isImplicationSentence()) {
			// Eliminate =>, replacing &alpha; => &beta;
			// with ~&alpha; | &beta;
			Sentence alpha = s.getSimplerSentence(0).accept(this, arg);
			Sentence beta = s.getSimplerSentence(1).accept(this, arg);
			Sentence notAlpha = new ComplexSentence(Connective.NOT, alpha);
			
			result = new ComplexSentence(Connective.OR, notAlpha, beta);
		} else {
			result = super.visitBinarySentence(s, arg);
		}
		return result;
