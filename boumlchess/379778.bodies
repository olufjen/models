class PagesDataset
!!!1829890.java!!!	loadDefaultPages() : Page
		return loadPages(wikiPagesFolderPath);
!!!1830018.java!!!	loadTestPages() : Page
		return loadPages(testFilesFolderPath);
!!!1830146.java!!!	loadPages(in folderPath : String) : Page

		Map<String, Page> pageTable = new Hashtable<String, Page>();
		Page currPage;
		File[] listOfFiles;
		wlf = new WikiLinkFinder();

		File folder = new File(folderPath);
		if (folder.exists() && folder.isDirectory()) {
			listOfFiles = folder.listFiles();
		} else {
			return null;
		} // maybe should throw exception instead?

		// Access each .txt file to create a new Page object for that file's
		// article
		for (int i = 0; i < listOfFiles.length; i++) {
			File currFile = listOfFiles[i];
			if (currFile.isFile()) {
				currPage = wikiPageFromFile(folder, currFile);
				pageTable.put(currPage.getLocation(), currPage);
			}
		}
		// now that all pages are loaded and their outlinks have been
		// determined,
		// we can determine a page's inlinks and then return the loaded table
		return pageTable = determineAllInlinks(pageTable);
!!!1830274.java!!!	wikiPageFromFile(inout folder : File, inout f : File) : Page
		Page p;
		String pageLocation = getPageName(f); // will be like: \wiki\*article
												// name*.toLowercase()
		String content = loadFileText(folder, f); // get html source as string
		p = new Page(pageLocation); // create the page object
		p.setContent(content); // give the page its html source as a string
		p.getOutlinks().addAll(wlf.getOutlinks(p)); // search html source for
													// links
		return p;
!!!1830402.java!!!	determineAllInlinks(inout pageTable : Map<String, Page>) : Page
		Page currPage;
		Set<String> keySet = pageTable.keySet();
		Iterator<String> keySetIterator = keySet.iterator();
		while (keySetIterator.hasNext()) {
			currPage = pageTable.get(keySetIterator.next());
			// add the inlinks to an currently empty List<String> object
			currPage.getInlinks().addAll(wlf.getInlinks(currPage, pageTable));
		}
		return pageTable;
!!!1830530.java!!!	getPageName(inout f : File) : String

		String wikiPrefix = "/wiki/";
		String filename = f.getName();
		if (filename.indexOf(".") > 0)
			filename = filename.substring(0, filename.lastIndexOf("."));
		return wikiPrefix + filename.toLowerCase();
!!!1830658.java!!!	loadFileText(inout folder : File, inout file : File) : String

		StringBuilder pageContent = new StringBuilder();
		BufferedReader br = null;

		// repeat for all files
		try {
			String sCurrentLine;
			String folderPath = folder.getAbsolutePath();
			String fileName = file.getName();

			br = new BufferedReader(new FileReader(folderPath + File.separator + fileName));

			while ((sCurrentLine = br.readLine()) != null) {
				pageContent.append(sCurrentLine);
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (br != null)
					br.close();
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}

		return pageContent.toString();
