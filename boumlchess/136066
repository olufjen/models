format 223
"agent" // aima::core::logic::propositional::agent
  revision 2
  modified_by 2 "bruker"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\svnroot\\logic\\ai\\trunk\\games\\src\\main\\java\\aima/core/logic/propositional/agent/"
  java_package "aima.core.logic.propositional.agent"
  classview 135042 "agent"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 170882 "KBAgent"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Artificial Intelligence A Modern Approach (3rd Edition): Figure 7.1, page
236.<br>
<br>

<pre>
function KB-AGENT(percept) returns an action
  persistent: KB, a knowledge base
              t, a counter, initially 0, indicating time
          
  TELL(KB, MAKE-PERCEPT-SENTENCE(percept, t))
  action &lt;- ASK(KB, MAKE-ACTION-QUERY(t))
  TELL(KB, MAKE-ACTION-SENTENCE(action, t))
  t &lt;- t + 1
  return action

</pre>

Figure 7.1 A generic knowledge-based agent. Given a percept, the agent adds
the percept to its knowledge base, asks the knowledge base for the best
action, and tells the knowledge base that it has in fact taken that action.

@author Ciaran O'Reilly
"
      classrelation 196226 // <generalisation>
	relation 196226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 196226 // <generalisation>
	  b parent class_ref 128770 // AbstractAgent
      end

      classrelation 196354 // KB (<unidirectional association>)
	relation 196354 --->
	  a role_name "KB" protected
	    comment " persistent: KB, a knowledge base
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 196354 // KB (<unidirectional association>)
	  b parent class_ref 144386 // KnowledgeBase
      end

      attribute 177538 "t"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " t, a counter, initially 0, indicating time
"
      end

      operation 358146 "KBAgent"
	public explicit_return_type ""
	nparams 1
	  param inout name "KB" type class_ref 144386 // KnowledgeBase
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 358274 "execute"
	public return_type class_ref 128002 // Action
	nparams 1
	  param inout name "percept" type class_ref 128386 // Percept
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " function KB-AGENT(percept) returns an action"
      end

      operation 358402 "makePerceptSentence"
	abstract public return_type class_ref 144514 // Sentence
	nparams 2
	  param inout name "percept" type class_ref 128386 // Percept
	  param in name "t" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "MAKE-PERCEPT-SENTENCE constructs a sentence asserting that the agent
perceived the given percent at the given time.

@param percept
           the given percept
@param t
           the given time
@return a sentence asserting that the agent perceived the given percept
        at the given time.

 MAKE-PERCEPT-SENTENCE(percept, t)"
      end

      operation 358530 "makeActionQuery"
	abstract public return_type class_ref 144514 // Sentence
	nparams 1
	  param in name "t" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "MAKE-ACTION-QUERY constructs a sentence that asks what action should be
done at the current time.

@param t
           the current time.
@return a sentence that asks what action should be done at the current
        time.

 MAKE-ACTION-QUERY(t)"
      end

      operation 358658 "makeActionSentence"
	abstract public return_type class_ref 144514 // Sentence
	nparams 2
	  param inout name "action" type class_ref 128002 // Action
	  param in name "t" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "MAKE-ACTION-SENTENCE constructs a sentence asserting that the chosen action was executed.
@param action
       the chose action.
@param t
       the time at which the action was executed.
@return a sentence asserting that the chosen action was executed.

 MAKE-ACTION-SENTENCE(action, t)"
      end

      operation 358786 "ask"
	abstract public return_type class_ref 128002 // Action
	nparams 2
	  param inout name "KB" type class_ref 144386 // KnowledgeBase
	  param inout name "actionQuery" type class_ref 144514 // Sentence
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A wrapper around the KB's ask() method which translates the action (in the form of
a sentence) determined by the KB into an allowed 'Action' object from the current
environment in which the KB-AGENT resides.

@param KB
       the KB to ask.
@param actionQuery
       an action query.
@return the Action to be performed in response to the given query.

 ASK(KB, MAKE-ACTION-QUERY(t))"
      end
    end
  end

  deploymentview 133378 "agent"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 161410 "KBAgent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.agent.Action;
import aima.core.agent.Percept;
import aima.core.agent.impl.AbstractAgent;
import aima.core.logic.propositional.kb.KnowledgeBase;
import aima.core.logic.propositional.parsing.ast.Sentence;
${definition}"
      associated_elems
	class_ref 170882 // KBAgent
      end
    end
  end
end
