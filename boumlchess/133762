format 223
"data" // aima::core::logic::fol::kb::data
  revision 2
  modified_by 2 "bruker"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\svnroot\\logic\\ai\\trunk\\games\\src\\main\\java\\aima/core/logic/fol/kb/data/"
  java_package "aima.core.logic.fol.kb.data"
  classview 132226 "data"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 148610 "Clause"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Clause: A disjunction of literals.


@author Ciaran O'Reilly
@author Tobias Barth

"
      classrelation 188418 // _saIndexical (<unidirectional association>)
	relation 188418 --->
	  a role_name "_saIndexical" init_value " StandardizeApartIndexicalFactory
			.newStandardizeApartIndexical('c')" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 188418 // _saIndexical (<unidirectional association>)
	  b parent class_ref 158594 // StandardizeApartIndexical
      end

      classrelation 188546 // _unifier (<unidirectional association>)
	relation 188546 --->
	  a role_name "_unifier" init_value " new Unifier()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 188546 // _unifier (<unidirectional association>)
	  b parent class_ref 161026 // Unifier
      end

      classrelation 188674 // _substVisitor (<unidirectional association>)
	relation 188674 --->
	  a role_name "_substVisitor" init_value " new SubstVisitor()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 188674 // _substVisitor (<unidirectional association>)
	  b parent class_ref 156930 // SubstVisitor
      end

      classrelation 188802 // _variableCollector (<unidirectional association>)
	relation 188802 --->
	  a role_name "_variableCollector" init_value " new VariableCollector()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 188802 // _variableCollector (<unidirectional association>)
	  b parent class_ref 159746 // VariableCollector
      end

      classrelation 188930 // _standardizeApart (<unidirectional association>)
	relation 188930 --->
	  a role_name "_standardizeApart" init_value " new StandardizeApart()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 188930 // _standardizeApart (<unidirectional association>)
	  b parent class_ref 159618 // StandardizeApart
      end

      classrelation 189058 // _literalSorter (<unidirectional association>)
	relation 189058 --->
	  a role_name "_literalSorter" init_value " new LiteralsSorter()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 189058 // _literalSorter (<unidirectional association>)
	  b parent class_ref 169090 // LiteralsSorter
      end

      classrelation 189186 // literals (<unidirectional association>)
	relation 189186 --->
	  stereotype "Set"
	  a role_name "literals" init_value " new LinkedHashSet<Literal>()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 189186 // literals (<unidirectional association>)
	  b parent class_ref 148738 // Literal
      end

      classrelation 189314 // positiveLiterals (<unidirectional association>)
	relation 189314 --->
	  stereotype "List"
	  a role_name "positiveLiterals" init_value " new ArrayList<Literal>()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 189314 // positiveLiterals (<unidirectional association>)
	  b parent class_ref 148738 // Literal
      end

      classrelation 189442 // negativeLiterals (<unidirectional association>)
	relation 189442 --->
	  stereotype "List"
	  a role_name "negativeLiterals" init_value " new ArrayList<Literal>()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 189442 // negativeLiterals (<unidirectional association>)
	  b parent class_ref 148738 // Literal
      end

      attribute 171906 "immutable"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 172034 "saCheckRequired"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 172162 "equalityIdentity"
	private explicit_type "String"
	init_value " \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 189570 // factors (<unidirectional association>)
	relation 189570 --->
	  stereotype "Set"
	  a role_name "factors" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 189570 // factors (<unidirectional association>)
	  b parent class_ref 148610 // Clause
      end

      classrelation 189698 // nonTrivialFactors (<unidirectional association>)
	relation 189698 --->
	  stereotype "Set"
	  a role_name "nonTrivialFactors" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 189698 // nonTrivialFactors (<unidirectional association>)
	  b parent class_ref 148610 // Clause
      end

      attribute 172290 "stringRep"
	private explicit_type "String"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 189826 // proofStep (<unidirectional association>)
	relation 189826 --->
	  a role_name "proofStep" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 189826 // proofStep (<unidirectional association>)
	  b parent class_ref 163330 // ProofStep
      end

      operation 322818 "Clause"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322946 "Clause"
	public explicit_return_type ""
	nparams 1
	  param inout name "lits" explicit_type "List<Literal>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 323074 "Clause"
	public explicit_return_type ""
	nparams 2
	  param inout name "lits1" explicit_type "List<Literal>"
	  param inout name "lits2" explicit_type "List<Literal>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 323202 "getProofStep"
	public return_type class_ref 163330 // ProofStep
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 323330 "setProofStep"
	public explicit_return_type "void"
	nparams 1
	  param inout name "proofStep" type class_ref 163330 // ProofStep
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 323458 "isImmutable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 323586 "setImmutable"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 323714 "isStandardizedApartCheckRequired"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 323842 "setStandardizedApartCheckNotRequired"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 323970 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 324098 "isUnitClause"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 324226 "isDefiniteClause"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 324354 "isImplicationDefiniteClause"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 324482 "isHornClause"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 324610 "isTautology"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 324738 "addLiteral"
	public explicit_return_type "void"
	nparams 1
	  param inout name "literal" type class_ref 148738 // Literal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 324866 "addPositiveLiteral"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atom" type class_ref 162178 // AtomicSentence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 324994 "addNegativeLiteral"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atom" type class_ref 162178 // AtomicSentence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 325122 "getNumberLiterals"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 325250 "getNumberPositiveLiterals"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 325378 "getNumberNegativeLiterals"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 325506 "getLiterals"
	public return_type class_ref 148738 // Literal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 325634 "getPositiveLiterals"
	public return_type class_ref 148738 // Literal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 325762 "getNegativeLiterals"
	public return_type class_ref 148738 // Literal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 325890 "getFactors"
	public return_type class_ref 148610 // Clause
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 326018 "getNonTrivialFactors"
	public return_type class_ref 148610 // Clause
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 326146 "subsumes"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "othC" type class_ref 148610 // Clause
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 326274 "binaryResolvents"
	public return_type class_ref 148610 // Clause
	nparams 1
	  param inout name "othC" type class_ref 148610 // Clause
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Note: Applies binary resolution rule
 Note: returns a set with an empty clause if both clauses
 are empty, otherwise returns a set of binary resolvents."
      end

      operation 326402 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 326530 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 326658 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "othObj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 326786 "getEqualityIdentity"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 326914 "recalculateIdentity"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PRIVATE METHODS
"
      end

      operation 327042 "calculateFactors"
	private explicit_return_type "void"
	nparams 1
	  param inout name "parentFactors" explicit_type "Set<Clause>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 327170 "saIfRequired"
	private return_type class_ref 148610 // Clause
	nparams 1
	  param inout name "othClause" type class_ref 148610 // Clause
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 327298 "collectLikeLiterals"
	private explicit_return_type "Map<String, List<Literal>>"
	nparams 1
	  param inout name "literals" explicit_type "Set<Literal>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 327426 "checkSubsumes"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "othC" type class_ref 148610 // Clause
	  param inout name "thisToTry" explicit_type "Map<String, List<Literal>>"
	  param inout name "othCToTry" explicit_type "Map<String, List<Literal>>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 148738 "Literal"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Artificial Intelligence A Modern Approach (3rd Edition): page 244.<br>
<br>
A literal is either an atomic sentence (a positive literal) or a negated
atomic sentence (a negative literal).

@author Ciaran O'Reilly

"
      classrelation 190338 // atom (<unidirectional association>)
	relation 190338 --->
	  a role_name "atom" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 190338 // atom (<unidirectional association>)
	  b parent class_ref 162178 // AtomicSentence
      end

      attribute 173058 "negativeLiteral"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 173186 "strRep"
	private explicit_type "String"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 173314 "hashCode"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 329602 "Literal"
	public explicit_return_type ""
	nparams 1
	  param inout name "atom" type class_ref 162178 // AtomicSentence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 329730 "Literal"
	public explicit_return_type ""
	nparams 2
	  param inout name "atom" type class_ref 162178 // AtomicSentence
	  param inout name "negated" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 329858 "newInstance"
	public return_type class_ref 148738 // Literal
	nparams 1
	  param inout name "atom" type class_ref 162178 // AtomicSentence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 329986 "isPositiveLiteral"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 330114 "isNegativeLiteral"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 330242 "getAtomicSentence"
	public return_type class_ref 162178 // AtomicSentence
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 330370 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 330498 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 330626 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 157058 "CNF"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Conjunctive Normal Form (CNF) : a conjunction of clauses, where each clause
is a disjunction of literals.

@author Ciaran O'Reilly

"
      classrelation 190210 // conjunctionOfClauses (<unidirectional association>)
	relation 190210 --->
	  stereotype "List"
	  a role_name "conjunctionOfClauses" init_value " new ArrayList<Clause>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 190210 // conjunctionOfClauses (<unidirectional association>)
	  b parent class_ref 148610 // Clause
      end

      operation 329090 "CNF"
	public explicit_return_type ""
	nparams 1
	  param inout name "conjunctionOfClauses" explicit_type "List<Clause>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 329218 "getNumberOfClauses"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 329346 "getConjunctionOfClauses"
	public return_type class_ref 148610 // Clause
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 329474 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 160002 "Chain"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A Chain is a sequence of literals (while a clause is a set) - order is
important for a chain.

@see <a
     href=\"http://logic.stanford.edu/classes/cs157/2008/lectures/lecture13.pdf\"
     >Chain</a>

@author Ciaran O'Reilly

"
      classrelation 188034 // _emptyLiteralsList (<unidirectional association>)
	relation 188034 --->
	  stereotype "List"
	  a role_name "_emptyLiteralsList" init_value " Collections
			.unmodifiableList(new ArrayList<Literal>())" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 188034 // _emptyLiteralsList (<unidirectional association>)
	  b parent class_ref 148738 // Literal
      end

      classrelation 188162 // literals (<unidirectional association>)
	relation 188162 --->
	  stereotype "List"
	  a role_name "literals" init_value " new ArrayList<Literal>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 188162 // literals (<unidirectional association>)
	  b parent class_ref 148738 // Literal
      end

      classrelation 188290 // proofStep (<unidirectional association>)
	relation 188290 --->
	  a role_name "proofStep" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 188290 // proofStep (<unidirectional association>)
	  b parent class_ref 163330 // ProofStep
      end

      operation 321154 "Chain"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 321282 "Chain"
	public explicit_return_type ""
	nparams 1
	  param inout name "literals" explicit_type "List<Literal>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 321410 "Chain"
	public explicit_return_type ""
	nparams 1
	  param inout name "literals" explicit_type "Set<Literal>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 321538 "getProofStep"
	public return_type class_ref 163330 // ProofStep
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 321666 "setProofStep"
	public explicit_return_type "void"
	nparams 1
	  param inout name "proofStep" type class_ref 163330 // ProofStep
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 321794 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 321922 "addLiteral"
	public explicit_return_type "void"
	nparams 1
	  param inout name "literal" type class_ref 148738 // Literal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322050 "getHead"
	public return_type class_ref 148738 // Literal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322178 "getTail"
	public return_type class_ref 148738 // Literal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322306 "getNumberLiterals"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322434 "getLiterals"
	public return_type class_ref 148738 // Literal
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322562 "getContrapositives"
	public return_type class_ref 160002 // Chain
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A contrapositive of a chain is a permutation in which a different literal
is placed at the front. The contrapositives of a chain are logically
equivalent to the original chain.

@return a list of contrapositives for this chain.
"
      end

      operation 322690 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 169090 "LiteralsSorter"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 189954 // <realization>
	relation 189954 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}<Literal>"
	    classrelation_ref 189954 // <realization>
	  b parent class_ref 166530 // Comparator
      end

      operation 327554 "compare"
	public explicit_return_type "int"
	nparams 2
	  param inout name "o1" type class_ref 148738 // Literal
	  param inout name "o2" type class_ref 148738 // Literal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 327682 "compareArgs"
	private explicit_return_type "int"
	nparams 2
	  param inout name "args1" explicit_type "List<Term>"
	  param inout name "args2" explicit_type "List<Term>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 169218 "ClauseEqualityIdentityConstructor"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 190082 // <realization>
	relation 190082 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 190082 // <realization>
	  b parent class_ref 157314 // FOLVisitor
      end

      attribute 172418 "identity"
	private explicit_type "StringBuilder"
	init_value " new StringBuilder()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 172546 "noVarPositions"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 172674 "clauseVarCounts"
	private explicit_type "int"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 172802 "currentLiteral"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 172930 "varPositions"
	private explicit_type "String, List<Integer>"
	init_value " new HashMap<String, List<Integer>>()"
	stereotype "Map"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 327810 "ClauseEqualityIdentityConstructor"
	public explicit_return_type ""
	nparams 2
	  param inout name "literals" explicit_type "List<Literal>"
	  param inout name "sorter" type class_ref 169090 // LiteralsSorter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 327938 "getIdentity"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 328066 "visitVariable"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "var" type class_ref 157698 // Variable
	  param inout name "arg" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " START-FOLVisitor"
      end

      operation 328194 "visitConstant"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "constant" type class_ref 149506 // Constant
	  param inout name "arg" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 328322 "visitFunction"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "function" type class_ref 157826 // Function
	  param inout name "arg" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 328450 "visitPredicate"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "predicate" type class_ref 157442 // Predicate
	  param inout name "arg" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 328578 "visitTermEquality"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "equality" type class_ref 157570 // TermEquality
	  param inout name "arg" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 328706 "visitQuantifiedSentence"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "sentence" type class_ref 158210 // QuantifiedSentence
	  param inout name "arg" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 328834 "visitNotSentence"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "sentence" type class_ref 157954 // NotSentence
	  param inout name "arg" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 328962 "visitConnectedSentence"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "sentence" type class_ref 158082 // ConnectedSentence
	  param inout name "arg" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 169346 "ReducedLiteral"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@see <a
     href=\"http://logic.stanford.edu/classes/cs157/2008/lectures/lecture13.pdf\"
     >Reduced Literal</a>

@author Ciaran O'Reilly

"
      classrelation 190466 // <generalisation>
	relation 190466 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 190466 // <generalisation>
	  b parent class_ref 148738 // Literal
      end

      attribute 173442 "strRep"
	private explicit_type "String"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 330754 "ReducedLiteral"
	public explicit_return_type ""
	nparams 1
	  param inout name "atom" type class_ref 162178 // AtomicSentence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 330882 "ReducedLiteral"
	public explicit_return_type ""
	nparams 2
	  param inout name "atom" type class_ref 162178 // AtomicSentence
	  param inout name "negated" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 331010 "newInstance"
	public return_type class_ref 148738 // Literal
	nparams 1
	  param inout name "atom" type class_ref 162178 // AtomicSentence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 331138 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 132866 "data"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 157698 "Chain"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Set;
import aima.core.logic.fol.inference.proof.ProofStep;
import aima.core.logic.fol.inference.proof.ProofStepChainContrapositive;
import aima.core.logic.fol.inference.proof.ProofStepPremise;
${definition}"
      associated_elems
	class_ref 160002 // Chain
      end
    end

    artifact 157826 "Clause"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import aima.core.logic.fol.StandardizeApart;
import aima.core.logic.fol.StandardizeApartIndexical;
import aima.core.logic.fol.StandardizeApartIndexicalFactory;
import aima.core.logic.fol.SubstVisitor;
import aima.core.logic.fol.Unifier;
import aima.core.logic.fol.VariableCollector;
import aima.core.logic.fol.inference.proof.ProofStep;
import aima.core.logic.fol.inference.proof.ProofStepClauseBinaryResolvent;
import aima.core.logic.fol.inference.proof.ProofStepClauseFactor;
import aima.core.logic.fol.inference.proof.ProofStepPremise;
import aima.core.logic.fol.parsing.FOLVisitor;
import aima.core.logic.fol.parsing.ast.AtomicSentence;
import aima.core.logic.fol.parsing.ast.ConnectedSentence;
import aima.core.logic.fol.parsing.ast.Constant;
import aima.core.logic.fol.parsing.ast.Function;
import aima.core.logic.fol.parsing.ast.NotSentence;
import aima.core.logic.fol.parsing.ast.Predicate;
import aima.core.logic.fol.parsing.ast.QuantifiedSentence;
import aima.core.logic.fol.parsing.ast.Term;
import aima.core.logic.fol.parsing.ast.TermEquality;
import aima.core.logic.fol.parsing.ast.Variable;
import aima.core.util.math.MixedRadixNumber;
${definition}"
      associated_elems
	class_ref 148610 // Clause
	class_ref 169090 // LiteralsSorter
	class_ref 169218 // ClauseEqualityIdentityConstructor
      end
    end

    artifact 157954 "CNF"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_elems
	class_ref 157058 // CNF
      end
    end

    artifact 158082 "Literal"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.logic.fol.parsing.ast.AtomicSentence;
import aima.core.logic.fol.parsing.ast.Term;
${definition}"
      associated_elems
	class_ref 148738 // Literal
      end
    end

    artifact 158210 "ReducedLiteral"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import aima.core.logic.fol.parsing.ast.AtomicSentence;
${definition}"
      associated_elems
	class_ref 169346 // ReducedLiteral
      end
    end
  end
end
